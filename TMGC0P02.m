TMGC0P02   ; TMG - ELAB / Web Service main entry points;  1/21/17, 3/24/21
        ;;1.0;TMG E LAB ORDERG;;1/21/17
  ;
ENSUB(INARY,C0PDUZ,SUBTYPE)  ; creates the array inary passed by name for subscriber
  ;**NOTE:** Copied from EN^C0PSUB
  ; variables, mostly from the new person file
  ; SUBSCRIBER-FAMILY-NAME
  ; SUBSCRIBER-GIVEN-NAME
  ; SUBSCRIBER-MIDDLE-NAME
  ; LOCATION-PHONE
  ; LOCATION-FAX
  ; ACCOUNT-PHONE
  ; ACCOUNT-FAX
  ; LOCATION-ADDRESS1
  ; LOCATION-ADDRESS2
  ; LOCATION-CITY
  ; LOCATION-ZIP
  ; LOCATION-ZIP4
  ; LOCATION-STATE
  ; SUBSCRIBER-LICENSE
  ; SUBSCRIBER-LICENSE-STATE
  ; SUBSCRIBER-USERROLE
  ; SUBSCRIBER-USER
  ; ACCOUNT-COUNTRY
  ; ACCOUNT-ADDRESS-ZIP4
  ; LOCATION-COUNTRY
  ; REQUESTED-PAGE
  D FAMILY^C0PSUB(INARY,"SUBCRIBER-FAMILY-NAME",C0PDUZ)
  D GIVEN^C0PSUB(INARY,"SUBCRIBER-GIVEN-NAME",C0PDUZ)
  D MIDDLE^C0PSUB(INARY,"SUBCRIBER-MIDDLE-NAME",C0PDUZ)
  D PHONEFAX(INARY,C0PLOC) ; SETS "LOCATION-PHONE" AND "LOCATION-FAX"
  D ACTPHFAX(INARY,C0PACCT) ;SETS "ACCOUNT-PHONE" AND "ACCOUNT-FAX"
  D GETLOC^C0PSUB(INARY,C0PLOC) ;SETS "LOCATION-" VARIABLES (SEE ROUTINE FOR LIST)
  D STLIC^C0PSUB(INARY,C0PDUZ,C0PACCT) ;LICENSE AND LICENSE STATE
  S C0PAF=113059002 ; FILE NUMBER FOR ACCOUNT FILE
  S @INARY@("ACCOUNT-PARTNERNAME")=$$GET1^DIQ(C0PAF,C0PACCT_",",3.1) ;
  I @INARY@("ACCOUNT-PARTNERNAME")="" S @INARY@("ACCOUNT-PARTNERNAME")="demo"
  ; todo: NPs, PAs, assistants need different roles
  D SETACCT^TMGC0P02(INARY,C0PDUZ,SUBTYPE) ; SET SUBSCRIBER VARIABLES  ;//kt note, must use TMG version of this
  ;S @INARY@("SUBSCRIBER-USERROLE")="doctor" ; BASE CASE ACCESS
  ;S @INARY@("SUBSCRIBER-USER")="LicensedPrescriber" ; BASE CASE ACCESS
  S @INARY@("ACCOUNT-COUNTRY")=$$COUNTRY("US") ;BASE CASE ACCESS
  S @INARY@("ACCOUNT-ADDRESS-ZIP4")="" ;DON'T HAVE THIS
  S @INARY@("LOCATION-COUNTRY")=$$COUNTRY("US") ; NOT IN FILE
  I $D(@INARY@("REQUESTED-PAGE"))=0 S @INARY@("REQUESTED-PAGE")="compose" ; DEFAULT PAG
  S @INARY@("ACCOUNT-ACCOUNTID")=$$GET1^DIQ(C0PAF,C0PACCT_",",2.4)
  I @INARY@("ACCOUNT-ACCOUNTID")="" S @INARY@("ACCOUNT-ACCOUNTID")="demo"
  S @INARY@("ACCOUNT-NAME")=$$GET1^DIQ(C0PAF,C0PACCT_",",3)
  I @INARY@("ACCOUNT-NAME")="" S @INARY@("ACCOUNT-NAME")="demo"
  S @INARY@("ACCOUNT-PASSWORD")=$$GET1^DIQ(C0PAF,C0PACCT_",",3.2)
  I @INARY@("ACCOUNT-PASSWORD")="" S @INARY@("ACCOUNT-PASSWORD")="demo"
  ;S @INARY@("SUBSCRIBER-USERTYPE")="Doctor" ; IS RESET LATER
  ;S @INARY@("SUBSCRIBER-USERID")="demo" ; IS RESET LATER
  ;N NPI S NPI=$$NPI^XUSNPI("Individual_ID",C0PDUZ)
  ;S @INARY@("SUBSCRIBER-SID")=+NPI ; FOR NOW
  ;
  Q
  ;
SETACCT(C0PRTN,C0PDUZ,SUBTYPE)  ;
  ;Purpose: RETURN ALL SUBSCRIBER SETTINGS FOR GENERATING XML AND VERIFYING A COMPLETE SETUP
  ;   ALSO, INITIALIZE NULL FIELDS WITH DEFAULTS
  ;Input: C0PRTN IS PASSED BY NAME
  ;       C0PDUZ
  ;       SUBTYPE
  ;Result: returns SERVIEN --  Service IEN in Subfile C0P in file 200 (.01 FIELD)
  ;
  ;TYPE
  ;-----------
  ;P LicensedPrescriber
  ;S Staff
  ;M MidlevelPrescriber
  ;V SupervisingDoctor
  ;
  ;USER ROLE
  ;----------
  ;D doctor
  ;N nurse
  ;A admin
  ;M manager
  ;SD supervisingDoctor
  ;MP midlevelPrescriber
  ;
  ;Requested Page
  ;-----------------
  ;C compose
  ;A admin
  ;M manager
  ;S status
  ;ME medentry
  ;P patientDetail
  ;H maintainHealthplans
  ;R reports-rx-daily
  ;
  N ZI,ZJ,SERVIEN
  SET SERVIEN=$$SETUP^TMGC0P01(SUBTYPE) ; INITIALIZE VARIABLES
  I SERVIEN="" Q  ; PERSON NOT SUBSCRIBED
  S C0PTYPE=$$GET1^DIQ($$F200C0P^C0PMAIN(),SERVIEN_","_C0PDUZ_",",4,"I")
  S C0PROLE=$$GET1^DIQ($$F200C0P^C0PMAIN(),SERVIEN_","_C0PDUZ_",",4.1,"I")
  S C0PPAGE=$$GET1^DIQ($$F200C0P^C0PMAIN(),SERVIEN_","_C0PDUZ_",",4.2,"I")
  N C0PSV ; SUPERVISING DOCTOR DUZ
  S C0PSV=$$GET1^DIQ($$F200C0P^C0PMAIN(),SERVIEN_","_C0PDUZ_",",6,"I")
  ; FIELD 6 IS SUPERVISING DOCTOR. USED FOR MIDLEVEL RENEWAL PROCESSING
  I $G(C0PSV)'="" D  ; IF THERE IS A SUPERVISING DOCTOR
  . S @C0PRTN@("SUPERVISING-DOCTOR-DUZ")=C0PSV ; RECORD FOR LATER USE
  I C0PTYPE="" D  ; SUBSCRIBER TYPE NOT SET
  . I C0PROLE="N" S C0PTYPE="S" ; DEFAULT FOR NURSE IS STAFF
  . E  S C0PTYPE="P" ; ELSE DEFAULT TYPE IS LICENSEDPRESCRIBER
  . K C0PFDA
  . S C0PFDA($$F200C0P^C0PMAIN,SERVIEN_","_C0PDUZ_",",4)=C0PTYPE ;SET TYPE
  . D UPDIE^C0PSUB ; SET THE SUBSCRIBER TYPE
  I C0PROLE="" D  ; SUBSCRIBER ROLE NOT SET
  . I C0PTYPE="P" S C0PROLE="D" ; DOCTOR IS DEFAULT FOR LICENSED PRESCRIBER
  . E  S C0PROLE="N" ; ALL OTHERS SET TO NURSE
  . K C0PFDA
  . S C0PFDA($$F200C0P^C0PMAIN,SERVIEN_","_C0PDUZ_",",4.1)=C0PROLE ;SET ROLE
  . D UPDIE^C0PSUB ; SET THE SUBSCRIBER ROLE
  I C0PPAGE="" D  ;
  . I C0PTYPE="P" S C0PPAGE="C" ; PRESCRIBERS TO COMPOSE PAGE
  . E  S C0PPAGE="P" ; ALL OTHERS DEFAULT TO PATIENT DETAIL PAGE
  . K C0PFDA
  . S C0PFDA($$F200C0P^C0PMAIN,SERVIEN_","_C0PDUZ_",",4.2)=C0PPAGE ;SET PAGE
  . D UPDIE^C0PSUB ; SET THE REQUESTED PAGE
  N ZF S ZF=$$F200C0P^C0PMAIN()
  S @C0PRTN@("REQUESTED-PAGE")=$$GET1^DIQ(ZF,SERVIEN_","_C0PDUZ_",",4.2)
  S @C0PRTN@("SUBSCRIBER-USERROLE")=$$GET1^DIQ(ZF,SERVIEN_","_C0PDUZ_",",4.1)
  S @C0PRTN@("SUBSCRIBER-USERTYPE")=$$GET1^DIQ(ZF,SERVIEN_","_C0PDUZ_",",4)
  S C0PSID=$$GET1^DIQ(ZF,SERVIEN_","_C0PDUZ_",",5)
  I C0PSID="" D  ; SUBSCRIBER ID NOT SET
  . S C0PSID=$$UUID^C0CUTIL ; SET TO RANDOM UUID
  . K C0PFDA
  . S C0PFDA($$F200C0P^C0PMAIN,SERVIEN_","_C0PDUZ_",",5)=C0PSID ;SET SID
  . D UPDIE^C0PSUB ; SET SUBSCRIBER ID
  N NPI S NPI=+$$NPI^XUSNPI("Individual_ID",C0PDUZ)
  I NPI=-1 S NPI="NONE"
  S @C0PRTN@("SUBSCRIBER-NPI")=NPI
  N DEA S DEA=$$DEA^XUSER("",C0PDUZ)
  I $L(DEA)=0 S DEA="NONE"
  S @C0PRTN@("SUBSCRIBER-DEA")=DEA
  ;N C0PNPIF ; NPI FOR SID LEGACY FLAG - DON'T NEW THIS, IT'S NEEDED LATER
  S C0PNPIF=$$GET1^DIQ(C0PAF,C0PACCT_",",8,"I") ; LEGACY FLAG TO USE NPI FOR SID
  I C0PNPIF'=1 S @C0PRTN@("SUBSCRIBER-SID")=C0PSID ; IF NO FLAG, USE GUID
  E  D  ; IF LEGACY FLAG IS ON, USE NPI FOR SID
  . S @C0PRTN@("SUBSCRIBER-SID")=NPI
  . I NPI="NONE" S @C0PRTN@("SUBSCRIBER-SID")="USER"_C0PDUZ ; IF NO NPI
  Q SERVIEN
  ;
WRAP(ZRTN,ZINARY,MODE,SUBTYPE)  ;WRAPS AN XML ARRAY (ZINARY) IN HTML FOR PROCESSING
  ;**NOTE**: Copied from WRAP^C0PCPRS1() and modified
  ;Input: ZRTN -- PASS BY REFERENCE
  ;       ZINARY -- PASS BY REFERENCE
  ;       MODE -- OPTIONAL. SEE COMMENT ABOVE ABOUT THE MODE SWITCH
  ;       SUBTYPE -- SUBSCRIPTION TYPE, "ERX", "ELAB", "WS"
  ;Results: None
  I $G(MODE)'=1 S MODE=0 ; BROWSER REDIRECT MODE IS 0 IF IT IS NOT 1
  I '$D(ZINARY(1)) D  Q  ; NOT SET UP FOR ERX
  . S ZRTN(1)="ERROR, PROVIDER NOT SUBSCRIBED"
  I MODE'=1 S ZINARY(1)="RxInput="_ZINARY(1)
  ; GPL - GET THE URL FROM THE XML TEMPLATE FILE BASED ON PRODUCTION FLAG
  N SERVIEN SET SERVIEN=$$SETUP^TMGC0P01(SUBTYPE) ;INITALIZE C0PACCT (WS ACCOUNT IEN) m
  N URL S URL=$$CTURL^C0PMAIN(C0PACCT) ; PRODUCTION OR TEST URL
  I $G(C0PNONAME)=1 D  ;
  . I MODE Q  ; WE'VE ALREADY BEEN TO EWD. THIS IS SECOND TIME
  . N TOKEN S TOKEN=$$STORE^C0CEWD("C0PSAV") ; STORE FOR EWD SCREENS
  . N ZT,ZU,ZP
  . S ZT=$O(^C0PX("B","C0P RENEWAL NOMATCH URL","")) ; IEN FOR URL
  . ; EXAMPLE URL: https://viper/dev/eRx/index1.ewd - be sure it matches your system
  . S ZU=$$GET1^DIQ(113059001,ZT_",",1) ; URL OF NOMATCH RENEWAL SCREEN
  . I C0PVARS("SUBSCRIBER-USERTYPE")="MidlevelPrescriber" S ZP="midmatch.ewd"
  . E  S ZP="index1.ewd" ; midlevels get their own page
  . S URL=ZU_ZP_"?TOKEN="""_TOKEN_"""" ; ewd interface
  . S C0PNONAME=0
  I MODE D BRSRDR^C0PCPRS1 Q  ; BROWSER REDIRCT PACKAGEING INSTEAD OF httpPOST2
  N APPSTR SET APPSTR="application/x-www-form-urlencoded"
  N OK S OK=$$httpPOST2^C0PCPRS1(.ZRTN,URL,.ZINARY,APPSTR,.gpl6,"","",.gpl5,.gpl7)
  Q
  ;
GETINS(REF,TMGDFN)  ;GET INSURANCE AND INSURED INFORMATION
  ;Input: REF -- PASS BY NAME.  AN OUTPUT PARAMETER.
  NEW RANK,TEMP
  NEW SUBIEN SET SUBIEN=0
  ;"Index insurance records by rank order
  FOR  SET SUBIEN=$ORDER(^DPT(TMGDFN,.312,SUBIEN)) QUIT:SUBIEN'>0  DO  
  . NEW N0 SET N0=$GET(^DPT(TMGDFN,.312,SUBIEN,0))
  . NEW THISRANK SET THISRANK=+$PIECE(N0,"^",20)
  . IF THISRANK=0 FOR TEMP=4:1 SET THISRANK=TEMP QUIT:$DATA(RANK(TEMP))=0
  . SET RANK(THISRANK)=SUBIEN
  MERGE TEMP=RANK KILL RANK
  NEW NEWIDX SET NEWIDX=1
  NEW RIDX SET RIDX=0
  ;"Ensure no gaps in order numbers.
  FOR  SET RIDX=$ORDER(TEMP(RIDX)) QUIT:RIDX'>0  DO
  . SET SUBIEN=TEMP(RIDX) QUIT:SUBIEN'>0
  . SET RANK(NEWIDX)=SUBIEN,NEWIDX=NEWIDX+1
  ;"Now cycle through insurance records in rank order, 1=primary
  SET RIDX=0 FOR  SET RIDX=$ORDER(RANK(RIDX)) QUIT:RIDX'>0  DO
  . SET SUBIEN=RANK(RIDX) QUIT:SUBIEN'>0
  . NEW TMG,TMGERR,TMGIENS SET TMGIENS=SUBIEN_","_TMGDFN_","
  . DO GETS^DIQ(2.312,TMGIENS,"*","EI","TMG","TMGERR")  ;"IGNORE ERRORS
  . NEW PREFIX SET PREFIX="INSURANCE-"_RIDX_"-"
  . NEW IEN36 SET IEN36=+$GET(TMG(2.312,TMGIENS,.01,"I"))  ;"IEN36 INSURANCE TYPE
  . SET @REF@(PREFIX_"ID")=IEN36  ;"//kt removed hsi prefix 4/4/17
  . DO GETPAYRD(REF,PREFIX,IEN36)
  . NEW PRE2 SET PRE2=PREFIX_"INSURED-"
  . SET @REF@(PRE2_"RELATIONSHIP")=$$RELTNSHP($GET(TMG(2.312,TMGIENS,4.03,"E")))
  . SET @REF@(PRE2_"PRIORITY-CODE")=$SELECT(RIDX=1:"Primary",RIDX=2:"Secondary",1:"Tertirary")
  . SET @REF@(PRE2_"POLICY-NUMBER")=$GET(TMG(2.312,TMGIENS,7.02,"E"))
  . SET @REF@(PRE2_"GROUP-NUMBER")=$GET(TMG(2.312,TMGIENS,21,"E"))
  . NEW NAME SET NAME=$GET(TMG(2.312,TMGIENS,7.01,"E")) DO NAMECOMP^XLFNAME(.NAME)
  . SET @REF@(PRE2_"LAST NAME")=NAME("FAMILY")
  . SET @REF@(PRE2_"FIRST NAME")=NAME("GIVEN")
  . SET @REF@(PRE2_"MIDDLE NAME")=NAME("MIDDLE")
  . NEW DOB SET DOB=$GET(TMG(2.312,TMGIENS,3.01,"I")) IF DOB>0 SET DOB=17000000+DOB
  . SET @REF@(PRE2_"DOB")=DOB
  . SET @REF@(PRE2_"GENDER")=$GET(TMG(2.312,TMGIENS,3.12,"I"))
  . SET @REF@(PRE2_"PHONE")=$$PHONE($GET(TMG(2.312,TMGIENS,3.11,"E")))
  . NEW PRE3 SET PRE3=PRE2_"ADDRESS-"
  . SET @REF@(PRE3_"1")=$GET(TMG(2.312,TMGIENS,3.06,"E"))
  . SET @REF@(PRE3_"2")=$GET(TMG(2.312,TMGIENS,3.07,"E"))
  . SET @REF@(PRE3_"CITY")=$GET(TMG(2.312,TMGIENS,3.08,"E"))
  . SET @REF@(PRE3_"STATE")=$$STATE($GET(TMG(2.312,TMGIENS,3.09,"I")))
  . SET @REF@(PRE3_"ZIP")=$GET(TMG(2.312,TMGIENS,3.1,"E"))
  . SET @REF@(PRE3_"ZIP4")=$GET(TMG(2.312,TMGIENS,3.1,"E"))
  . SET @REF@(PRE3_"COUNTRY")=$$COUNTRY($GET(TMG(2.312,TMGIENS,3.13,"E")))
  . ;"--- GUARANTOR INFO.  WILL USE INSURED FOR INSURANCE AS GUARANTOR
  . NEW PRE4 SET PRE4=PREFIX_"GUARANTOR-"
  . SET @REF@(PRE4_"ID")=SUBIEN
  . SET @REF@(PRE4_"LAST NAME")=NAME("FAMILY")
  . SET @REF@(PRE4_"FIRST NAME")=NAME("GIVEN")
  . SET @REF@(PRE4_"MIDDLE NAME")=NAME("MIDDLE")
  . SET @REF@(PRE4_"DOB")=DOB
  . SET @REF@(PRE4_"GENDER")=$GET(TMG(2.312,TMGIENS,3.12,"I"))
  . SET @REF@(PRE4_"PHONE")=$$PHONE($GET(TMG(2.312,TMGIENS,3.11,"E")))
  . SET @REF@(PRE4_"RELATIONSHIP")=$$RELTNSHP($GET(TMG(2.312,TMGIENS,4.03,"E")))
  QUIT
  ;
GETPAYRD(REF,PREFIX,IEN36) ;GET PAYOR (INSURANCE) DETAIL
  NEW TMGARR,TMGERR
  DO GETS^DIQ(36,IEN36_",","*","IE","TMGARR","TMGERR")  ;"IGNORE ERRORS
  NEW ARR SET ARR=$NAME(TMGARR(36,IEN36_","))
  SET @REF@(PREFIX_"NAME")=$GET(@ARR@(.01,"E"))  
  SET @REF@(PREFIX_"INSURANCE-SERVICE-PROVIDER")=$GET(@ARR@(.01,"E"))  
  SET @REF@(PREFIX_"ADDRESS1")=$GET(@ARR@(.111,"E"))
  NEW ADD2 SET ADD2=$GET(@ARR@(.112,"E"))
  NEW ADD3 SET ADD3=$GET(@ARR@(.113,"E"))
  IF ADD3'="" SET ADD2=ADD2_"; "_ADD3
  SET @REF@(PREFIX_"ADDRESS2")=ADD2
  SET @REF@(PREFIX_"CITY")=$GET(@ARR@(.114,"E"))
  SET @REF@(PREFIX_"STATE")=$$STATE($GET(@ARR@(.115,"I")))
  SET @REF@(PREFIX_"ZIP")=$GET(@ARR@(.116,"E"))
  SET @REF@(PREFIX_"ZIP4")=$GET(@ARR@(.116,"E"))
  SET @REF@(PREFIX_"COUNTRY")=$$COUNTRY("US")  
  SET @REF@(PREFIX_"GROUP-NUMBER")=$GET(@ARR@(21,"E"))
  QUIT
  ;
PHONE(NUMBER)  ;"STRIP PHONE NUMBER TO JUST NUMBERS.  NOTE: "(123) 456-789 x12" --> "12345678912 "
  NEW TMGRESULT SET TMGRESULT=""
  NEW IDX FOR IDX=1:1:$LENGTH(NUMBER) DO
  . NEW CH SET CH=$EXTRACT(NUMBER,IDX)
  . IF "0123456789"[CH SET TMGRESULT=TMGRESULT_CH
  QUIT TMGRESULT
  ;
ACTPHFAX(RARY,ZACCT)    ;SET ACCOUNT PHONE AND FAX FROM ACCOUNT FILE
  ;Copied from COPSUB to allow call to $$PHONE()
  ; ZACCT IS A POINTER TO THE ACCOUNT FILE
  S C0PAF=113059002 ; FILE NUMBER FOR ACCOUNT FILE
  S @RARY@("ACCOUNT-PHONE")=$$PHONE($$GET1^DIQ(C0PAF,ZACCT_",",2.2)) ;PHONE NUMBER
  S @RARY@("ACCOUNT-FAX")=$$PHONE($$GET1^DIQ(C0PAF,ZACCT_",",2.1)) ; FAX NUMBER
  Q
  ;
PHONEFAX(RARY,C0PLOC)   ; SET LOCATION PHONE AND FAX INTO THE RETURN ARRAY
  ;Copied from COPSUB to allow call to $$PHONE()
  N PRIORITY,LOCIEN
  S PRIORITY=$O(^SC(C0PLOC,"C0P","PRIORITY",""))
  I PRIORITY="" W "NO LOCATION PHONE SET",! Q
  S LOCIEN=$O(^SC(C0PLOC,"C0P","PRIORITY",PRIORITY,""))
  S C0PLOCF=44.113059
  S @RARY@("LOCATION-PHONE")=$$PHONE($$GET1^DIQ(C0PLOCF,LOCIEN_","_C0PLOC_",",1))
  S @RARY@("LOCATION-FAX")=$$PHONE($$GET1^DIQ(C0PLOCF,LOCIEN_","_C0PLOC_",",2))
  Q
  ;
RELTNSHP(CODE)    ;"MAP VISTA RELATIONSHIPS TO THOSE ALLOWED IN XML
  ;"XML allowed values: Self, Spouse, Child, Employer, Unknown
  ;"VistA options:  01:SPOUSE, 18:SELF, 19:CHILD, 20:EMPLOYEE, 29:SIGNIFICANT OTHER,
  ;"             32:MOTHER, 33:FATHER, 39:ORGAN DONOR, 41:INJURED PLAINTIFF,
  ;"           53:LIFE PARTNER, G8:OTHER RELATIONSHIP
  NEW TMGRESULT SET TMGRESULT=""
  IF CODE="SPOUSE" SET TMGRESULT="Spouse"
  ELSE  IF CODE="SELF" SET TMGRESULT="Self"
  ELSE  IF CODE="CHILD" SET TMGRESULT="Child"
  ELSE  SET TMGRESULT="Uknown"
  QUIT TMGRESULT
  ;
STATE(IEN)  ;"RETURN STATE ABBREVIATION CODE
  NEW SC SET SC=""
  IF +$GET(IEN)>0 SET SC=$PIECE($GET(^DIC(5,IEN,0)),"^",2)
  QUIT SC
  ;
COUNTRY(CODE)  ;"FORCE TO US, CA, OR MX
  QUIT "US"  ;--FOR NOW MAKE EVERYTHING USA... I don't think others will apply
  ;
WSURL(ZACCT,TMPLIEN)    ; EXTRINSIC TO RETURN THE URL TO USE FOR WEB SERVICES
  ;//kt Copied and modified from WSURL^C0PMAIN
  ;//kt NOTE: I am changing system such that URL (field 1) from the
  ;           TMPLNAME is used when the production flag is set
  ; IT WILL DETERMINE WHETHER THE PRODUCTION SWITCH IS ON IN THE
  ; ACCOUNT FILE AND IF YES RETURN THE PRODUCTION URL
  ; IF NOT RETURN THE PREPRODUCTION TEST URL
  N ZR,ZP,ZT
  S ZP=$$GET1^DIQ(113059002,ZACCT_",",7,"I") ; PRODUCTION FLAG
  I ZP="P" D  ; PRODUCTION FLAG SET
  . ;"S ZT=$O(^C0PX("B",TMPLNAME,"")) ; PRODUCION TEMPLATE
  . S ZR=$$GET1^DIQ(113059001,+TMPLIEN_",",1) ; URL FIELD
  E  D  ; PRODUCTION FLAG NOT SET
  . S ZT=$O(^C0PX("B","TEST WS URL","")) ; TEST TEMPLATE
  . S ZR=$$GET1^DIQ(113059001,ZT_",",1) ; URL FIELD
  Q ZR
  ;

