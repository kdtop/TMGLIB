TMGRPT6  ;TMG/kst TMG REPORTS  ;4/18/23
         ;;1.0;TMG-LIB;**1**;4/18/23 ;
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;"Copyright (c) 6/23/2015  Kevin S. Toppenberg MD
 ;"
 ;"This file is part of the TMG LIBRARY, and may only be used in accordence
 ;" to license terms outlined in separate file TMGLICNS.m, which should 
 ;" always be distributed with this file.
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;
 ;"=======================================================================
 ;" API -- Public Functions.
 ;"=======================================================================
 ;"BILLRPT(TMGDFN,TIUIEN)  ;"GET ONE BILLING REPORT
 ;"=======================================================================
 ;"PRIVATE API FUNCTIONS
 ;"=======================================================================
 ;"
 ;
 ;"=======================================================================
 ;"DEPENDENCIES
 ;"=======================================================================
 ;" TMGRPT2
 ;"=======================================================================
 ;"
PRNTBILL(TMGDFN,TIUIEN)  ;" PRINT REPORT
  NEW TMGRESULT DO BILLRPT(.TMGRESULT,TMGDFN,TIUIEN)
  IF '$D(TMGRESULT) QUIT
  ZWR TMGRESULT
  NEW %ZIS,IOP
  SET IOP="S121-LAUGHLIN-LASER"
  DO ^%ZIS  ;"standard device call
  IF POP DO  QUIT
  . DO SHOWERR^TMGDEBU2(.PriorErrorFound,"Error opening output. Aborting.")
  USE IO
  WRITE $G(TMGRESULT("TITLE")),!,!
  NEW CATEGORY SET CATEGORY=""
  FOR  SET CATEGORY=$O(TMGRESULT(CATEGORY)) QUIT:CATEGORY=""  DO
  . IF CATEGORY="TITLE" QUIT
  . WRITE "   [   ] ",CATEGORY,!  ;"ONLY PRINTING LINES NOW
  . ;WRITE "== ",CATEGORY," ==",!
  . ;NEW LINE SET LINE=""
  . ;FOR  SET LINE=$O(TMGRESULT(CATEGORY,LINE)) QUIT:LINE=""  DO
  . ;. WRITE "   [   ] ",LINE,!
  . ;WRITE !
  DO ^%ZISC  ;" Close the output device
  QUIT
  ;"
BILLRPT(TMGRESULT,TMGTHISDFN,TIUIEN)  ;"GET ONE BILLING REPORT
  IF +$G(TMGTHISDFN)'>0 QUIT
  NEW TIUDATE
  SET TIUDATE=$P($G(^TIU(8925,TIUIEN,0)),"^",7)
  SET TIUDATE=$P(TIUDATE,".",1)
  NEW BDATE,EDATE
  SET BDATE=TIUDATE_".0000",EDATE=TIUDATE_".999999"
  NEW NAME SET NAME=$$GETNAME^TMGRPT2(TMGTHISDFN)
  ;"
  NEW GROUPIEN SET GROUPIEN=1  ;"HARD CODING FOR SEQUELMED GROUP
  NEW TMGRPT
  NEW BILLIEN
  SET BILLIEN=0
  ;"
  ;"IMMUNIZATIONS
  FOR  SET BILLIEN=$ORDER(^TMG(22727,GROUPIEN,1,BILLIEN)) QUIT:BILLIEN'>0  DO       
  . NEW IMMIEN,TEXT
  . SET IMMIEN=$PIECE($GET(^TMG(22727,GROUPIEN,1,BILLIEN,0)),"^",1)
  . SET TEXT=$PIECE($GET(^TMG(22727,GROUPIEN,1,BILLIEN,0)),"^",2)
  . NEW IEN SET IEN=0
  . FOR  SET IEN=$ORDER(^AUPNVIMM("C",TMGTHISDFN,IEN)) QUIT:IEN'>0  DO
  . . NEW ZN SET ZN=$GET(^AUPNVIMM(IEN,0))
  . . NEW THISIMM SET THISIMM=$PIECE(ZN,"^",1)
  . . IF THISIMM'=IMMIEN QUIT
  . . NEW VISITIEN SET VISITIEN=$PIECE(ZN,"^",3)
  . . NEW DATE SET DATE=$PIECE($GET(^AUPNVSIT(VISITIEN,0)),"^",1)
  . . IF (DATE>BDATE)&(DATE<EDATE) DO
  . . . NEW TMGDFN SET TMGDFN=$PIECE(ZN,"^",2)
  . . . IF TMGDFN=TMGTHISDFN QUIT
  . . . DO TRANSLATE(.TMGRESULT,TEXT,TMGDFN,"IMMUNIZATION")
  ;"
  ;"Get Health Factors
  SET BILLIEN=0
  FOR  SET BILLIEN=$ORDER(^TMG(22727,GROUPIEN,2,BILLIEN)) QUIT:BILLIEN'>0  DO
  . NEW HFIEN,TEXT
  . SET HFIEN=$PIECE($GET(^TMG(22727,GROUPIEN,2,BILLIEN,0)),"^",1)
  . SET TEXT=$PIECE($GET(^TMG(22727,GROUPIEN,2,BILLIEN,0)),"^",2)
  . SET IEN=0
  . FOR  SET IEN=$ORDER(^AUPNVHF("B",HFIEN,IEN)) QUIT:IEN'>0  DO
  . . NEW ZN SET ZN=$GET(^AUPNVHF(IEN,0))
  . . NEW VISITIEN SET VISITIEN=$PIECE(ZN,"^",3)
  . . NEW DATE SET DATE=$PIECE($GET(^AUPNVSIT(VISITIEN,0)),"^",1)
  . . IF (DATE>BDATE)&(DATE<EDATE) DO
  . . . NEW TMGDFN SET TMGDFN=$PIECE(ZN,"^",2)
  . . . IF TMGDFN=TMGTHISDFN QUIT
  . . . DO TRANSLATE(.TMGRESULT,TEXT,TMGDFN,"CPT")
  ;"
  ;"Get TIU Notes
  SET BILLIEN=0
  FOR  SET BILLIEN=$ORDER(^TMG(22727,GROUPIEN,3,BILLIEN)) QUIT:BILLIEN'>0  DO
  . NEW TIUIEN,TEXT
  . SET TIUIEN=$PIECE($GET(^TMG(22727,GROUPIEN,3,BILLIEN,0)),"^",1)
  . SET TEXT=$PIECE($GET(^TMG(22727,GROUPIEN,3,BILLIEN,0)),"^",2)
  . NEW TIUDATE,THISTIUIEN,FOUND   
  . SET TIUDATE=$PIECE(BDATE,".",1)
  . FOR  SET TIUDATE=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE)) QUIT:(TIUDATE>EDATE)!(TIUDATE'>0)  DO
  . . SET THISTIUIEN=0
  . . FOR  SET THISTIUIEN=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE,THISTIUIEN)) QUIT:THISTIUIEN'>0  DO
  . . . IF THISTIUIEN'=TIUIEN QUIT
  . . . NEW ZN SET ZN=$GET(^TIU(8925,THISTIUIEN,0))
  . . . NEW DATE SET DATE=$PIECE(ZN,"^",7)
  . . . IF (DATE>BDATE)&(DATE<EDATE) DO
  . . . . NEW TMGDFN SET TMGDFN=$PIECE(ZN,"^",2)
  . . . . IF TMGDFN=TMGTHISDFN QUIT
  . . . . DO TRANSLATE(.TMGRESULT,TEXT,TMGDFN,"CPT")
  ;"
  ;"Look for billing tags
  SET BILLIEN=0
  FOR  SET BILLIEN=$ORDER(^TMG(22727,GROUPIEN,4,BILLIEN)) QUIT:BILLIEN'>0  DO 
  . NEW STR,TEXT
  . SET STR=$$UP^XLFSTR($PIECE($GET(^TMG(22727,GROUPIEN,4,BILLIEN,0)),"^",1))
  . SET TEXT=$PIECE($GET(^TMG(22727,GROUPIEN,4,BILLIEN,0)),"^",2)
  . NEW TIUDATE,TIUIEN,FOUND   
  . SET TIUDATE=$PIECE(BDATE,".",1)
  . FOR  SET TIUDATE=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE)) QUIT:(TIUDATE>EDATE)!(TIUDATE'>0)  DO
  . . SET TIUIEN=0
  . . FOR  SET TIUIEN=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE,TIUIEN)) QUIT:TIUIEN'>0  DO
  . . . SET FOUND=$$SRCHTIU^TMGRPT2(TIUIEN,STR)
  . . . IF FOUND=1 DO
  . . . . NEW TMGDFN SET TMGDFN=$PIECE($GET(^TIU(8925,TIUIEN,0)),"^",2)
  . . . . IF TMGDFN=TMGTHISDFN QUIT
  . . . . DO TRANSLATE(.TMGRESULT,TEXT,TMGDFN,"CPT")
  . . . . ;"SET TMGRESULT($P(OUTTEXT,"^",1),$P(OUTTEXT,"^",2),DATE)=""
  ;"Look for ICDs assigned during the visit
  ;"
  ;"NEW ICDARRAY DO GETICDS(.ICDARRAY,BDATE,EDATE)
  NEW ICDARRAY,CPTARRAY 
  DO GETCODES(TMGTHISDFN,.ICDARRAY,.CPTARRAY,BDATE,EDATE,.OPTION)
  NEW TMPPAT SET TMPPAT=""
  FOR  SET TMPPAT=$ORDER(ICDARRAY(TMPPAT)) QUIT:TMPPAT=""  DO
  . NEW ICDSTR SET ICDSTR=""
  . FOR  SET ICDSTR=$ORDER(ICDARRAY(TMPPAT,ICDSTR)) QUIT:ICDSTR=""  DO
  . . NEW ADT SET ADT=""
  . . FOR  SET ADT=$ORDER(ICDARRAY(TMPPAT,ICDSTR,ADT)) QUIT:ADT'>0  DO
  . . . IF (ADT>BDATE)&(ADT<EDATE) DO  ;"only get ICDs for TODAY'S VISIT
  . . . . NEW ICDCODE SET ICDCODE=$P(ICDSTR," --",1)
  . . . . ;"SET ICDCODE=$$UPDTICD(ICDCODE)
  . . . . ;"SET TMGRESULT("ICD",ICDCODE,ADT)=""
  . . . . SET TMGRESULT("Bill with ICD "_CPTCODE,ADT)=""
  ;"NOTE:; The following pulls CPTs for the claims, however we aren't using this yet so commenting
  ;"       out until we start adding CPTs through CPRS
  SET TMPPAT=""
  FOR  SET TMPPAT=$O(CPTARRAY(TMPPAT)) QUIT:TMPPAT=""  DO
  . NEW CPTSTR SET CPTSTR=""
  . FOR  SET CPTSTR=$O(CPTARRAY(TMPPAT,CPTSTR)) QUIT:CPTSTR=""  DO
  . . NEW ADT SET ADT=""
  . . FOR  SET ADT=$ORDER(CPTARRAY(TMPPAT,CPTSTR,ADT)) QUIT:ADT'>0  DO
  . . . IF (ADT>BDATE)&(ADT<EDATE) DO  ;"ADT[$$TODAY^TMGDATE DO  ;"only get CPTs for TODAY'S VISIT
  . . . . NEW CPTCODE SET CPTCODE=$P(CPTSTR," --",1)
  . . . . ;"SET CPTCODE=$$UPDTCPT(CPTCODE)
  . . . . ;"SET TMGRESULT("CPT",CPTCODE,ADT)=""
  . . . . SET TMGRESULT("Bill with CPT "_CPTCODE,ADT)=""
  ;"Handle Routines
  ;"IF FILTER=1 GOTO GDDN
C2 ;"CPT-II CODES  
  SET BILLIEN=0
  FOR  SET BILLIEN=$ORDER(^TMG(22727,GROUPIEN,5,BILLIEN)) QUIT:BILLIEN'>0  DO
  . NEW ENTRY,ROUTINE,CALL,TEXT,RESULT,OUTARRAY,RESULT
  . SET ENTRY=$P($GET(^TMG(22727,GROUPIEN,5,BILLIEN,0)),"^",1)
  . SET ROUTINE=$P($GET(^TMG(22727,GROUPIEN,5,BILLIEN,0)),"^",2)
  . SET TEXT=$GET(^TMG(22727,GROUPIEN,5,BILLIEN,1))
  . IF (ENTRY="")!(ROUTINE="") QUIT
  . SET CALL="SET RESULT=+$$"_ENTRY_"^"_ROUTINE_"(.OUTARRAY,BDATE,EDATE,TEXT)"
  . XECUTE CALL
  . IF RESULT>0 DO
  . . NEW PATIENT SET PATIENT=""
  . . FOR  SET PATIENT=$O(OUTARRAY(PATIENT)) QUIT:PATIENT=""  DO
  . . . IF PATIENT=NAME DO
  . . . . NEW LINE SET LINE=""
  . . . . FOR  SET LINE=$O(OUTARRAY(PATIENT,LINE)) QUIT:LINE=""  DO
  . . . . . DO TRANSLATE(.TMGRESULT,LINE,TMGTHISDFN,"CPT")
  . . ;"MERGE TMGRESULT=OUTARRAY
  IF $D(TMGRESULT) SET TMGRESULT("TITLE")="BILLING REPORT FOR: "_NAME_" DOS: "_$$EXTDATE^TMGDATE(TIUDATE)
  QUIT
  ;" 
TRANSLATE(TMGRESULT,LINE,TMGDFN,TYPE)  ;"TRANSLATE CODE
  SET TMGRESULT(LINE)=""
  QUIT
  IF LINE'["(" DO
  . SET TMGRESULT("MISC",LINE)=""
  ELSE  IF LINE["BP Codes" DO
  . NEW CODE SET CODE=$P(LINE,": ",2)
  . SET LINE=$P(LINE,":",1)
  . SET TMGRESULT("CPT",CODE_" "_LINE)=""
  ELSE  DO
  . NEW CODE SET CODE=$P(LINE,"(",2),CODE=$P(CODE,")",1)
  . SET CODE=CODE_" "_$P(LINE,"(",1)
  . ;"SET TYPE="CPT"
  . IF LINE["CKD" SET TYPE="ICD"
  . SET TMGRESULT(TYPE,CODE)=""
  QUIT
  ;"
GETCODES(TMGTHISDFN,ICDARRAY,CPTARRAY,BDATE,EDATE,OPTION)  ;"
  ;"This report will return all the ICDs for patients seen for the date range specified
  ;"Input: ICDARRAY  -- OUT PARAMETER.  Format:
  ;"                     ICDARRAY(<NAME (DFN)>,<ICD - DESCRIPTION>,<FMDT>)=""
  ;"       CPTARRAY  -- OUT PARAMETER
  ;"       BDATE -- start FMDT
  ;"       EDATE -- end FMDT 
  ;"       OPTION -- required
  ;"             OPTION("CPT")=1 if CPT's wanted.  Output into CPTARRAY
  ;"             OPTION("ICD")=1 if ICD's wanted.  Output into ICDARRAY
  SET FILTER=+$GET(FILTER)
  NEW IEN,TEXT,ICDIEN,ICDTEXT
  NEW TIUDATE,TIUIEN,FOUND
  ;"SET TIUDATE=$PIECE(BDATE,".",1)
  SET TIUDATE=BDATE-0.000001
  NEW SDT,EDT
  SET SDT=BDATE
  SET EDT=$PIECE(BDATE,".",1)_".999999"  ;"6/1/20 was originally set to BDATE
  FOR  SET TIUDATE=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE)) QUIT:(TIUDATE>EDATE)!(TIUDATE'>0)  DO
  . SET TIUIEN=0
  . FOR  SET TIUIEN=$ORDER(^TIU(8925,"ZTMGPTDT",TMGTHISDFN,TIUDATE,TIUIEN)) QUIT:TIUIEN'>0  DO
  . . NEW ICDIEN SET ICDIEN=0
  . . FOR  SET ICDIEN=$ORDER(^AUPNVPOV("C",TMGTHISDFN,ICDIEN)) QUIT:+ICDIEN'>0  DO
  . . . NEW ZN SET ZN=$GET(^AUPNVPOV(ICDIEN,0)) QUIT:ZN=""
  . . . NEW VSTIEN SET VSTIEN=+$PIECE(ZN,"^",3) QUIT:VSTIEN'>0
  . . . NEW VSTZN SET VSTZN=$GET(^AUPNVSIT(VSTIEN,0)) QUIT:VSTZN=""
  . . . NEW VSTDT SET VSTDT=$PIECE(VSTZN,"^",1)
  . . . IF (VSTDT<SDT)!(VSTDT>EDT) QUIT  ;"Past this line, ICD is within daterange
  . . . ;" BELOW WAS ICDIEN, AND WHILE IT WAS NEWED WAS CONFUSING WITH ABOVE VARIABLE  12/28/16
  . . . NEW VICDIEN SET VICDIEN=+$PIECE(ZN,"^",1) QUIT:VICDIEN'>0
  . . . NEW ICDZN SET ICDZN=$GET(^ICD9(VICDIEN,0)) QUIT:ICDZN=""
  . . . NEW ADT SET ADT=$ORDER(^ICD9(VICDIEN,68,"B",""),-1) QUIT:ADT'>0
  . . . NEW PTR SET PTR=$ORDER(^ICD9(VICDIEN,68,"B",ADT,0)) QUIT:PTR'>0
  . . . NEW DESCR SET DESCR=$GET(^ICD9(VICDIEN,68,PTR,1))
  . . . NEW STR
  . . . IF $$UP^XLFSTR($PIECE(ICDZN,"^",1))["Y33.XXXA" DO
  . . . . NEW COMMENT SET COMMENT=$G(^AUPNVPOV(ICDIEN,811))
  . . . . IF COMMENT[" --> {Staff to code}" SET COMMENT=$PIECE(COMMENT," --> {Staff to code}",1)
  . . . . SET STR="'"_COMMENT_"' (STAFF TO CODE)"    ;"MAY ALTER LATER IF NEED BE
  . . . ELSE  DO
  . . . . SET STR=$PIECE(ICDZN,"^",1)_" -- "_DESCR
  . . . SET ICDARRAY(NAME,STR,VSTDT)=""
  . . NEW CPTIEN SET CPTIEN=0
  . . FOR  SET CPTIEN=$ORDER(^AUPNVCPT("C",TMGTHISDFN,CPTIEN)) QUIT:+CPTIEN'>0  DO
  . . . NEW ZN SET ZN=$GET(^AUPNVCPT(CPTIEN,0)) QUIT:ZN=""
  . . . NEW VSTIEN SET VSTIEN=+$PIECE(ZN,"^",3) QUIT:VSTIEN'>0
  . . . NEW VSTZN SET VSTZN=$GET(^AUPNVSIT(VSTIEN,0)) QUIT:VSTZN=""
  . . . NEW VSTDT SET VSTDT=$PIECE(VSTZN,"^",1)
  . . . IF (VSTDT<SDT)!(VSTDT>EDT) QUIT  ;"Past this line, CPT is within daterange
  . . . NEW VCPTIEN SET VCPTIEN=+$PIECE(ZN,"^",1) QUIT:VCPTIEN'>0
  . . . NEW CPTZN SET CPTZN=$GET(^ICPT(VCPTIEN,0)) QUIT:CPTZN=""
  . . . NEW ADT SET ADT=$ORDER(^ICPT(VCPTIEN,62,"B",""),-1) QUIT:ADT'>0
  . . . NEW PTR SET PTR=$ORDER(^ICPT(VCPTIEN,62,"B",ADT,0)) QUIT:PTR'>0
  . . . NEW DESCR SET DESCR=$GET(^ICPT(VCPTIEN,62,PTR,1))
  . . . NEW STR SET STR=$PIECE(CPTZN,"^",1)_" -- "_DESCR
  . . . SET CPTARRAY(NAME,STR,VSTDT)=""
  QUIT 
  ;"
MISSINR
  NEW OUTARR,OUTIDX,LINE SET OUTIDX=1
  NEW BDT SET BDT=$$ADDDAYS^TMGDATE("-30",$$TODAY^TMGDATE)
  NEW INRIEN SET INRIEN=0
  FOR  SET INRIEN=$O(^AUPNVCPT("B",93793,INRIEN)) QUIT:INRIEN'>0  DO
  . NEW VISITIEN SET VISITIEN=$P($G(^AUPNVCPT(INRIEN,0)),"^",3)
  . NEW VISITDATE SET VISITDATE=$P($P($G(^AUPNVSIT(VISITIEN,0)),"^",1),".",1)
  . IF VISITDATE<BDT QUIT
  . NEW TMGDFN SET TMGDFN=$P($G(^AUPNVCPT(INRIEN,0)),"^",2)
  . SET LINE=$P($G(^DPT(TMGDFN,0)),"^",1)_" ON "_$$EXTDATE^TMGDATE(VISITDATE)
  . ;"IS THERE A NOTE FOR THIS DATE?
  . NEW NOTEDATE SET NOTEDATE=VISITDATE-1
  . NEW NOTEFOUND SET NOTEFOUND=1
  . FOR  SET NOTEDATE=$O(^TIU(8925,"ZTMGPTDT",TMGDFN,NOTEDATE)) QUIT:NOTEDATE'>0  DO
  . . IF $P(NOTEDATE,".",1)'=VISITDATE QUIT
  . . NEW NOTEIEN SET NOTEIEN=0
  . . FOR  SET NOTEIEN=$O(^TIU(8925,"ZTMGPTDT",TMGDFN,NOTEDATE,NOTEIEN)) QUIT:NOTEIEN'>0  DO
  . . . NEW NOTETYPE SET NOTETYPE=$P($G(^TIU(8925,NOTEIEN,0)),"^",1)
  . . . IF (NOTETYPE'=2024)&(NOTETYPE'=2023) QUIT
  . . . SET NOTEFOUND=1
  . IF NOTEFOUND=0 DO
  . . SET OUTARR(OUTIDX)=LINE,OUTIDX=OUTIDX+1
  . . SET OUTARR(OUTIDX)="NO NOTE FOUND FOR THIS INR!!!!!",OUTIDX=OUTIDX+1
  IF '$D(OUTARR) QUIT
  NEW %ZIS
  SET %ZIS("A")="Enter Output Device: "
  SET IOP="S121-LAUGHLIN-LASER"
  DO ^%ZIS  ;"standard device call
  IF POP DO  GOTO CSPDn
  . DO SHOWERR^TMGDEBU2(.PriorErrorFound,"Error opening output. Aborting.")
  use IO
  SET OUTIDX=0
  WRITE !
  WRITE "***************************************************************",!
  WRITE "            AT HOME INRS THAT ARE MISSING NOTES IN CPRS",!
  WRITE "            " SET Y=$$TODAY^TMGDATE DO DD^%DT WRITE Y,!
  WRITE "           Please deliver this report to Eddie",!
  WRITE "***************************************************************",!
  WRITE "                                            (From TMGRPT6.m)",!!
  FOR  SET OUTIDX=$O(OUTARR(OUTIDX)) QUIT:OUTIDX'>0  DO
  . WRITE $G(OUTARR(OUTIDX)),!
  DO ^%ZISC  ;" Close the output device  
  QUIT
       ;"