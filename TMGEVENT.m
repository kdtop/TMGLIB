TMGEVENT       ;TMG - TMG CPRS EVENT FUNCTIONS;   3/24/21
  ;;1.0.CPRS Event Functions:**1**;OCT 29, 2020;Build 1
  ;"
  ;"
CHANNEL(TMGRESULT,EVENTINFO)  ;"
  ;"Purpose: This will be the main Event RPC Channel
  ;"Input: EVENTARRAY=COMMAND^DATA
  ;"       IF COMMAND=SAVE
  ;"             DATA should be USER^PATIENT^EVENT^DATETIME^DATA
  ;"       IF COMMAND=GET
  ;"             DATA should be USER^PATIENT^EVENT
  SET TMGRESULT(0)="1^SUCCESSFUL"
  NEW COMMAND SET COMMAND=$P(EVENTINFO,"^",1)
  IF COMMAND="" DO  GOTO CHDN
  . SET TMGRESULT(0)="-1^NO COMMAND FOUND IN PIECE 1"
  SET EVENTINFO=$P(EVENTINFO,"^",2,9999)
  NEW X SET X="DO "_COMMAND_"(.TMGRESULT,.EVENTINFO)"
  XECUTE X
CHDN    ;
  QUIT
  ;"        
SAVE(TMGRESULT,EVENTINFO)
  ;"This will save the event data and return any errors in TMGRESULT
  ;
  ;"This is used to store events from CPRS
  ;"Patient and Data are optional because certain events
  ;"    may not need extra data nor may be patient centric
  NEW USER,PATIENT,EVENT,DATA,DATETIME
  SET USER=+$P(EVENTINFO,"^",1),PATIENT=+$P(EVENTINFO,"^",2),EVENT=+$P(EVENTINFO,"^",3)
  SET DATA=+$P(EVENTINFO,"^",5),DATETIME=+$P(EVENTINFO,"^",4),TMGRESULT(0)="1^SUCCESSFUL"
  IF DATA'>0 DO
  . IF (EVENT=1)!(EVENT=2) SET DATA=$J     ;"SAVE $J IN DATA SO WE CAN TIE EVENTS TOGETHER
  IF USER'>0 DO  GOTO SADN
  . SET TMGRESULT(0)="-1^USER NOT SENT"
  IF EVENT'>0 DO  GOTO SADN
  . SET TMGRESULT(0)="-1^EVENT NOT SENT"
  IF DATETIME="" DO  GOTO SADN
  . SET TMGRESULT(0)="-1^DATETIME NOT SENT"
  IF DATETIME=0 DO
  . DO NOW^%DTC
  . SET DATETIME=%
  NEW TMGFDA,TMGIEN,TMGMSG,TMGIENS
  SET TMGIENS="+1,"
  SET TMGFDA(22747,TMGIENS,.01)=USER
  IF PATIENT>0 SET TMGFDA(22747,TMGIENS,.02)=PATIENT
  SET TMGFDA(22747,TMGIENS,.03)=EVENT
  SET TMGFDA(22747,TMGIENS,.04)=DATETIME
  IF DATA>0 SET TMGFDA(22747,TMGIENS,.05)=DATA
  DO UPDATE^DIE("","TMGFDA","TMGIEN","TMGMSG")
  IF $DATA(TMGMSG("DIERROR")) DO
  . SET TMGRESULT(0)="-1^Error: "_$$GETERRST^TMGDEBU2(.TMGMSG) 
SADN    ;
  QUIT
  ;"
GET(TMGRESULT,EVENTINFO)
  ;"
  QUIT
  ;"
CHKOPEN(TMGRESULT,EVENTINFO)    ;"
  ;"CHECK THE LAST EVENT FOR AN OPEN EVENT, WITHOUT A CORRESPONDING
  ;"      CLOSE
  SET TMGRESULT(0)="1^NO MESSAGE"
  NEW IDX SET IDX=99999999
  NEW TMGDFN SET TMGDFN=+$P(EVENTINFO,"^",2)
  NEW USER SET USER=+$P(EVENTINFO,"^",1)
  NEW TODAY SET TODAY=$$TODAY^TMGDATE()
  NEW DONE SET DONE=0
  FOR  SET IDX=$O(^TMG(22747,"C",TMGDFN,IDX),-1) QUIT:(IDX'>0)!(DONE=1)  DO
  . NEW ZN SET ZN=$G(^TMG(22747,IDX,0))
  . NEW EVENT SET EVENT=$P(ZN,"^",3) 
  . NEW JOBNUM SET JOBNUM=+$P(ZN,"^",5)
  . NEW THISUSER SET THISUSER=$P(ZN,"^",1)
  . NEW THISDATE SET THISDATE=$P(ZN,"^",4)
  . NEW THISDAY SET THISDAY=$P(THISDATE,".",1)
  . IF (EVENT=1)&(THISUSER=USER)&(THISDAY=TODAY) DO
  . . SET DONE=1
  . . SET TMGRESULT(0)="-1^LAST EVENT DOESN'T HAVE CORRESPONDING CLOSE. TURNED ON AT: "_$$EXTDATE^TMGDATE(THISDATE)_"^"_JOBNUM
  . ELSE  IF (EVENT=2)&(THISUSER=USER) DO
  . . SET DONE=1
  QUIT
  ;"
GETTIMEOLD(TMGDFN,VERBOSE,SHOWMSG)  ;"
  ;"GET TOTAL TIME SPENT TODAY
  SET SHOWMSG=+$G(SHOWMSG)
  SET VERBOSE=+$G(VERBOSE)
  NEW TMGRESULT,TIMEARRAY,IDX 
  NEW TODAY SET TODAY=$$TODAY^TMGDATE()
  NEW TIMEIDX SET TIMEIDX=9999
  SET IDX=999999
  FOR  SET IDX=$O(^TMG(22747,"C",TMGDFN,IDX),-1) QUIT:IDX'>0  DO
  . NEW ZN SET ZN=$G(^TMG(22747,IDX,0))
  . NEW EVENT SET EVENT=$P(ZN,"^",3)
  . NEW THISUSER SET THISUSER=$P(ZN,"^",1)
  . IF THISUSER'=DUZ QUIT
  . NEW THISDATE SET THISDATE=$P(ZN,"^",4)
  . NEW EDATE,DAY,TIME SET EDATE=$$EXTDATE^TMGDATE(THISDATE)
  . SET DAY=$P(EDATE,"@",1),TIME=$P(EDATE,"@",2),THISDATE=$P(THISDATE,".",1)
  . IF THISDATE'=TODAY QUIT
  . SET TIMEARRAY(TIMEIDX)=$J($P(ZN,"^",4),7,4)  ;"justify to 4 decimal places
  . SET TIMEIDX=TIMEIDX-1
  ;"NOW CYCLE THROUGH THE ARRAY TO DETERMINE TIME
  SET TMGRESULT=""
  SET TIMEIDX=0
  NEW TOTTIME SET TOTTIME=0
  FOR  SET TIMEIDX=$O(TIMEARRAY(TIMEIDX)) QUIT:TIMEIDX'>0  DO
  . NEW BTIME,ETIME
  . SET BTIME=$G(TIMEARRAY(TIMEIDX)),TIMEIDX=TIMEIDX+1,ETIME=$G(TIMEARRAY(TIMEIDX))
  . IF ETIME'>0 DO   ;"WE ARE GOING TO ASSUME THE CURRENT TIME
  . . NEW X DO NOW^%DTC
  . . SET ETIME=%
  . NEW TIMEDIFF SET TIMEDIFF=$$TIMEDIFF^TMGDATE(BTIME,ETIME)
  . SET TOTTIME=TOTTIME+TIMEDIFF
  . SET TMGRESULT=TMGRESULT_$$EXTDATE^TMGDATE(BTIME)_"-"_$$EXTDATE^TMGDATE(ETIME)_"="_TIMEDIFF_" MINS"_$C(13,10)
  IF VERBOSE=0 SET TMGRESULT=""
  SET TMGRESULT=TMGRESULT_"Time spent with patient: "_TOTTIME_" mins"
  IF SHOWMSG=1 DO
  . SET TMGRESULT=TMGRESULT_$C(13,10)_$C(13,10)_"<br>This time may include chart review before the visit, the actual patient visit, and time spent on documentation after the visit."
  . SET TMGRESULT=TMGRESULT_$C(13,10)_$C(13,10)_"<br>If any procedures were done during the visit, the time for the procedure was not included in determining the level of visit."
  IF SHOWMSG=2 DO   ;"ONLY RETURN TIME, FOR TMG CPRS GET STARTING TIME
  . SET TMGRESULT=TOTTIME
  QUIT TMGRESULT
  ;"
GETTIME(TMGDFN,VERBOSE,SHOWMSG)  ;"
  ;"GET TOTAL TIME SPENT TODAY
  SET SHOWMSG=+$G(SHOWMSG)
  SET VERBOSE=+$G(VERBOSE)
  NEW TMGRESULT,TIMEARRAY,IDX
  NEW TODAY SET TODAY=$$TODAY^TMGDATE()
  ;"SET TODAY=3230330
  NEW TIMEIDX SET TIMEIDX=9999
  SET IDX=999999
  FOR  SET IDX=$O(^TMG(22747,"C",TMGDFN,IDX),-1) QUIT:IDX'>0  DO
  . NEW ZN SET ZN=$G(^TMG(22747,IDX,0))
  . NEW JOBNUM SET JOBNUM=+$P(ZN,"^",5)
  . IF JOBNUM<1 SET JOBNUM=1
  . NEW EVENT SET EVENT=$P(ZN,"^",3)
  . NEW THISUSER SET THISUSER=$P(ZN,"^",1)
  . IF THISUSER'=DUZ QUIT
  . NEW THISDATE SET THISDATE=$P(ZN,"^",4)
  . NEW EDATE,DAY,TIME SET EDATE=$$EXTDATE^TMGDATE(THISDATE)
  . SET DAY=$P(EDATE,"@",1),TIME=$P(EDATE,"@",2),THISDATE=$P(THISDATE,".",1)
  . IF THISDATE'=TODAY QUIT
  . SET TIMEARRAY(JOBNUM,TIMEIDX)=$J($P(ZN,"^",4),7,4)  ;"justify to 4 decimal places
  . SET TIMEIDX=TIMEIDX-1
  ;"NOW CYCLE THROUGH THE ARRAY TO DETERMINE TIME
  SET TMGRESULT=""
  ;"SET TIMEIDX=0
  NEW TOTTIME SET TOTTIME=0
  SET JOBNUM=0
  FOR  SET JOBNUM=$O(TIMEARRAY(JOBNUM)) QUIT:JOBNUM'>0  DO
  . SET TIMEIDX=0
  . FOR  SET TIMEIDX=$O(TIMEARRAY(JOBNUM,TIMEIDX)) QUIT:TIMEIDX'>0  DO
  . . NEW BTIME,ETIME
  . . SET BTIME=$G(TIMEARRAY(JOBNUM,TIMEIDX)),TIMEIDX=TIMEIDX+1,ETIME=$G(TIMEARRAY(JOBNUM,TIMEIDX))
  . . IF ETIME'>0 DO   ;"WE ARE GOING TO ASSUME THE CURRENT TIME
  . . . NEW X DO NOW^%DTC
  . . . SET ETIME=%
  . . NEW TIMEDIFF SET TIMEDIFF=$$TIMEDIFF^TMGDATE(BTIME,ETIME)
  . . SET TOTTIME=TOTTIME+TIMEDIFF
  . . SET TMGRESULT=TMGRESULT_$$EXTDATE^TMGDATE(BTIME)_"-"_$$EXTDATE^TMGDATE(ETIME)_"="_TIMEDIFF_" MINS ("_JOBNUM_")"_$C(13,10)
  IF VERBOSE=0 SET TMGRESULT=""
  SET TMGRESULT=TMGRESULT_"Time spent with patient: "_TOTTIME_" mins"
  IF SHOWMSG=1 DO
  . SET TMGRESULT=TMGRESULT_$C(13,10)_$C(13,10)_"<br>This time may include chart review before the visit, the actual patient visit, and time spent on documentation after the visit."
  . SET TMGRESULT=TMGRESULT_$C(13,10)_$C(13,10)_"<br>If any procedures were done during the visit, the time for the procedure was not included in determining the level of visit."
  IF SHOWMSG=2 DO   ;"ONLY RETURN TIME, FOR TMG CPRS GET STARTING TIME
  . SET TMGRESULT=TOTTIME
  QUIT TMGRESULT
  ;"
GTREPORT(ROOT,TMGDFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;"AWV report
  ;"RETURN HTML REPORT OF TIME SPENT
  ;"Purpose: Entry point, as called from CPRS REPORT system
  ;"Input: ROOT -- Pass by NAME.  This is where output goes
  ;"       TMGDFN -- Patient DFN ; ICN for foriegn sites
  ;"       ID --
  ;"       ALPHA -- Start date (lieu of DTRANGE)
  ;"       OMEGA -- End date (lieu of DTRANGE)
  ;"       DTRANGE -- # days back from today
  ;"       REMOTE --
  ;"       MAX    --
  ;"       ORFHIE --
  ;"Result: None.  Output goes into @ROOT
  NEW TMGRESULT,RESULTIDX SET RESULTIDX=1
  NEW SDT,EDT
  SET SDT=+$G(ALPHA)
  SET EDT=+$G(OMEGA) IF EDT'>0 SET EDT="9999999"
  NEW HD SET HD="<table BORDER=3><caption><b>PATIENT EVENT REPORT</b><br>"
  SET HD=HD_" FAMILY PHYSICIANS OF GREENEVILLE<br>1410 TUSCULUM BLVD  STE. 2600 <br>"
  SET HD=HD_" GREENEVILLE, TN 37745</caption><TR><th>DATE</th>"
  SET HD=HD_"<th>EVENT</th><th>USER</th><th>TIME</th><th>ELLAPSED</th></TR>"
  NEW IDX SET IDX=9999999
  NEW LASTDATE SET LASTDATE=0
  NEW LASTTIME SET LASTTIME=0
  NEW SUM
  NEW TIMEARR,PRINTTIME,TOTTIME
  NEW TIMEIDX SET TIMEIDX=1
  FOR  SET IDX=$O(^TMG(22747,"C",TMGDFN,IDX),-1) QUIT:IDX'>0  DO
  . NEW ZN SET ZN=$G(^TMG(22747,IDX,0))
  . NEW EVENT SET EVENT=$P(ZN,"^",3)
  . NEW JOBNUM SET JOBNUM=$P(ZN,"^",5)
  . NEW THISUSER SET THISUSER=$P(ZN,"^",1)
  . NEW THISDATE SET THISDATE=$J($P(ZN,"^",4),7,4)
  . IF (THISDATE<SDT)!(THISDATE>EDT) QUIT
  . NEW ELLAPSED SET ELLAPSED=""""
  . NEW EDATE,DAY,TIME SET EDATE=$$EXTDATE^TMGDATE(THISDATE)
  . SET DAY=$P(EDATE,"@",1),TIME=$P(EDATE,"@",2)
  . IF DAY'=LASTDATE DO
  . . IF LASTDATE'=0 DO TIMESUM(.TIMEARR,.TMGRESULT,.RESULTIDX,SUM)
  . . SET LASTDATE=DAY
  . . SET LASTTIME=THISDATE
  . . SET SUM=0
  . ELSE  DO
  . . SET DAY=""""
  . . IF (LASTTIME'=0) DO
  . . . SET ELLAPSED=$$TIMEDIFF^TMGDATE(LASTTIME,THISDATE)
  . . . SET SUM=SUM+ELLAPSED
  . . . SET LASTTIME=0
  . . ELSE  DO
  . . . SET LASTTIME=THISDATE
  . SET TIMEARR(TIMEIDX)=THISDATE,TIMEIDX=TIMEIDX+1
  . SET TMGRESULT(RESULTIDX)=DAY_"^"_$P($G(^TMG(22746,EVENT,0)),"^",1)_"^"_$P($G(^VA(200,THISUSER,0)),"^",1)_"^"_TIME_"^"_ELLAPSED
  . SET RESULTIDX=RESULTIDX+1
  IF $D(TIMEARR) DO TIMESUM(.TIMEARR,.TMGRESULT,.RESULTIDX,SUM)
  DO SETHTML^TMGRPT2(.ROOT,.TMGRESULT,"CHART EVENT REPORT",HD,5)
  QUIT
  ;"
TIMESUM(TIMEARR,TMGRESULT,RESULTIDX,SUM)  ;"
  ;"CALCULATE THE TIME FOR THE TIME IN TIME ARR. OUTPUT TO TMGRESULT
  NEW TOTTIME,TIMEIDX,ERROR
  SET SUM=+$G(SUM)
  SET TIMEIDX=9999,TOTTIME=0,ERROR=0
  FOR  SET TIMEIDX=$O(TIMEARR(TIMEIDX),-1) QUIT:TIMEIDX'>0  DO
  . NEW THISTIME,NEXTTIME SET THISTIME=$G(TIMEARR(TIMEIDX))
  . SET TIMEIDX=TIMEIDX-1 SET NEXTTIME=$G(TIMEARR(TIMEIDX))
  . IF NEXTTIME'>0 DO  QUIT
  . . SET ERROR=1
  . SET TOTTIME=TOTTIME+$$TIMEDIFF^TMGDATE(NEXTTIME,THISTIME)
  IF SUM>0 SET TOTTIME=SUM
  IF ERROR=1 DO
  . SET TMGRESULT(RESULTIDX)="======^DAY TOTAL TIME^(UNMATCHED TIME!)^"_TOTTIME_"^MINS"
  ELSE  DO
  . SET TMGRESULT(RESULTIDX)="======^DAY TOTAL TIME^======^"_TOTTIME_"^MINS"
  SET RESULTIDX=RESULTIDX+1
  KILL TIMEARR 
  QUIT
  ;" 
OPENTIME(TMGRESULT,TMGDFN)  ;"
  ;"THIS IS FOR RPC "TMG GET TODAYS TIME" TO BE USED WHEN OPENING A CHART
  ;"   SO IT CAN SET THE TIMER TO DISPLAY TODAY'S TIME UP UNTIL NOW
  IF +$G(TMGDFN)'>0 SET TMGRESULT=0 QUIT
  SET TMGRESULT=+$$GETTIME(TMGDFN,0,2)
  QUIT
  ;"
 ;"==============================================================================================
 ;"==============================================================================================
 ;"  Code for TMG TASK EVENTS, file 22750
 ;"==============================================================================================
 ;"==============================================================================================
GETTELIST(OUT,ADFN,SDT,EDT) ;"GET TASK EVENT LIST  
  ;"Input: OUT -- pass by reference.  See result below  
  ;"       ADFN -- patient IEN
  ;"       SDT -- FMDT for start of creation-date of records to return (inclusive)
  ;"       EDT -- FMDT for end of creation-date of records to return (inclusive)
  ;"RESULT: None.  
  ;"Output: OUT is filled.  Format:
  ;"       OUT(#)=0^Status Set info, e.g. P:Pending,C:Completed....   <--- from ^DD(22750,.03,0)
  ;"       OUT(#)=IEN#^0^Name^DateCreated^StatusCode^ActionDate^ParentIEN^ResponsiblePersonIEN|Name^CreateByPersonIEN|Name
  ;"       OUT(#)=IEN#^1^Description
  ;"       OUT(#)=IEN#^2^line#^0^NOTES WP lines 
  KILL OUT
  NEW IDX SET IDX=1
  SET OUT(IDX)="0^"_$PIECE($GET(^DD(22750,.03,0)),"^",3),IDX=IDX+1
  SET ADFN=+$GET(ADFN)
  SET SDT=+$GET(SDT)
  SET EDT=+$GET(EDT,9999999)
  NEW IEN SET IEN=0
  FOR  SET IEN=$ORDER(^TMG(22750,"B",ADFN,IEN)) QUIT:IEN'>0  DO
  . NEW ADT SET ADT=$PIECE($GET(^TMG(22750,IEN,0)),"^",2)
  . IF (ADT<SDT)!(ADT>EDT) QUIT
  . NEW TMP MERGE TMP=^TMG(22750,IEN)
  . NEW JDX FOR JDX=7,8 DO  ;"Convert NEW PERSON pointers to include external form. 
  . . NEW ADUZ SET ADUZ=+$PIECE($GET(TMP(0)),"^",JDX)
  . . NEW ANAME SET ANAME=$PIECE($GET(^VA(200,ADUZ,0)),"^",1)
  . . SET $PIECE(TMP(0),"^",JDX)=ADUZ_"|"_ANAME
  . KILL TMP(2,0),TMP(10,0)
  . NEW REF SET REF="TMP"
  . FOR  SET REF=$QUERY(@REF) QUIT:(REF="")  DO
  . . NEW STR SET STR=$PIECE($PIECE(REF,"TMP(",2),")",1)
  . . SET STR=$TRANSLATE(STR,",","^")
  . . SET OUT(IDX)=IEN_"^"_STR_"^"_$GET(@REF),IDX=IDX+1
  QUIT
  ;
POSTDATA(OUT,ARRAY) ;"POST DATA CHANGES  
  ;"Input: OUT -- pass by reference.  See result below  
  ;"       ARRAY -- array of data to be posted.  If value is empty, no filing is done for that field
  ;"         ARRAY(#)=IEN#^0^Name^DateCreated^StatusCode^ActionDate^ParentIEN^ResponsiblePersonIEN|Name^CreateByPersonIEN|Name
  ;"         ARRAY(#)=IEN#^1^Description
  ;"         ARRAY(#)=IEN#^2^line#^0^NOTES WP lines
  ;"         note: Multiple IEN's for changes to multiple records can be provided. 
  ;"OUTPUT: OUT = 1^OK, or -1^Error Message, or 1^ADDED^+1=123,+2=234
  ;"Results : none
  NEW DEBUG SET DEBUG=0
  IF DEBUG=0 DO
  . KILL ^TMG("TMP","RPC","TMGEVENT POST")
  . MERGE ^TMG("TMP","RPC","TMGEVENT POST")=ARRAY
  ELSE  DO
  . KILL ARRAY 
  . MERGE ARRAY=^TMG("TMP","RPC","TMGEVENT POST")
  SET OUT="1^OK"  ;"default        
  ;" QUIT  ;"TEMP!!
  ;"Convert flat data from RPC into parsed tree array.  
  NEW INFO SET INFO(0)=".01^.02^.03^.04^.05^.06^.07",INFO(1)="1"
  NEW ERR,ARR2,IDX,ADDED SET IDX=""
  FOR  SET IDX=$ORDER(ARRAY(IDX)) QUIT:IDX'>0  DO
  . NEW LINE SET LINE=$GET(ARRAY(IDX)) QUIT:LINE=""
  . NEW IEN SET IEN=$PIECE(LINE,"^",1)
  . NEW NODE SET NODE=$PIECE(LINE,"^",2)
  . IF NODE=2 DO  ;"NOTES WP FIELD
  . . NEW LINENUM SET LINENUM=+$PIECE(LINE,"^",3)
  . . SET ARR2(IEN,2,LINENUM)=$PIECE(LINE,"^",4)
  . ELSE  IF NODE=10 DO  ;"CHILDREN SUBFILE IN FIELD 10
  . . NEW SUBIEN SET SUBIEN=$PIECE(LINE,"^",3)
  . . NEW LINE2 SET LINE2=$PIECE(LINE,"^",5,999)
  . . SET ARR2(IEN,10,SUBIEN,.01)=$PIECE(LINE2,"^",1)
  . ELSE  DO  ;"ALL OTHER FIELDS
  . . NEW FLD,JDX,LINE2 SET LINE2=$PIECE(LINE,"^",3,999) 
  . . FOR JDX=1:1:20 DO  QUIT:FLD=""
  . . . SET FLD=$PIECE($GET(INFO(NODE)),"^",JDX) QUIT:FLD=""
  . . . NEW VALUE SET VALUE=$PIECE(LINE2,"^",JDX) QUIT:VALUE=""
  . . . SET ARR2(IEN,FLD)=VALUE
  ;"Now file parsed array
  NEW IEN SET IEN=0
  FOR  SET IEN=$ORDER(ARR2(IEN)) QUIT:IEN'>0  DO
  . NEW TMGFDA,TMGMSG,TMGIEN
  . NEW FLD SET FLD=0
  . FOR  SET FLD=$ORDER(ARR2(IEN,FLD)) QUIT:FLD'>0  DO
  . . NEW VALUE 
  . . IF FLD=2 SET VALUE=$NAME(ARR2(IEN,2))  ;"wp field
  . . ELSE  SET VALUE=$GET(ARR2(IEN,FLD)) QUIT:VALUE=""
  . . SET TMGFDA(22750,IEN_",",FLD)=VALUE
  . ;"EDDIE - if IEN is +x this should be the UPDATE^DIE?
  . IF IEN["+" DO
  . . NEW ADDIDX SET ADDIDX=$PIECE(IEN,"+",2)
  . . DO UPDATE^DIE("EK","TMGFDA","TMGIEN","TMGMSG")
  . . IF +$G(TMGIEN(ADDIDX))>0 SET ADDED(IEN)=$G(TMGIEN(ADDIDX))
  . ELSE  DO
  . . DO FILE^DIE("EK","TMGFDA","TMGMSG")
  . IF $DATA(TMGMSG("DIERR")) DO
  . . NEW ERRIDX SET ERRIDX=$ORDER(ERR(""),-1)+1
  . . SET ERR(ERRIDX)=$$GETERRST^TMGDEBU2(.TMGMSG)
  ;"Now check for errors
  IF $DATA(ERR) DO
  . SET OUT=""
  . SET IDX=""
  . FOR  SET IDX=$ORDER(ERR(IDX)) QUIT:IDX'>0  DO
  . . IF OUT="" DO
  . . . SET OUT="-1^"
  . . ELSE  SET OUT=OUT_", AND "
  . . SET OUT=OUT_$GET(ERR(IDX))
  ;"CHECK FOR ADDED ENTRIES AND RETURN IENS
  IF $DATA(ADDED) DO    
  . SET OUT="",IEN=0
  . FOR  SET IEN=$ORDER(ADDED(IEN)) QUIT:IEN'>0  DO
  . . IF OUT'="" SET OUT=OUT_","
  . . SET OUT=OUT_IEN_"="_$G(ADDED(IEN))
  . SET OUT="1^ADDED^"_OUT
  ;
  QUIT
 ;
GETEDUE(OUT,SDT,EDT)  ;"Get list of due Task Events
  ;"Input: OUT -- PASS BY REFERENCE, AN OUT PARAMETER.  Format below
  ;"       DT -- Optional.  This is 'as-of' date.  Default is NOW
  ;"Result: none
  ;"Output: OUT.  Format:  OUT(IEN)='<DFN>^<ACTION FMDT>^<STATUS CODE>^<DUZ>^<SHORT DESCRIPTION>'
  SET SDT=+$GET(SDT)  ;"CHANGE TO DEFAULT OF t-1Y
  IF SDT'>0 SET SDT=$$ADDDAYS^TMGDATE("-365")
  SET EDT=$GET(EDT)
  IF EDT'>0 SET EDT=$$NOW^XLFDT
  NEW ADT SET ADT=SDT-0.0000001
  FOR  SET ADT=$ORDER(^TMG(22750,"ATMGDTST",ADT)) QUIT:(ADT'>0)!(ADT>EDT)  DO
  . NEW ASTATUS SET ASTATUS=""
  . FOR  SET ASTATUS=$ORDER(^TMG(22750,"ATMGDTST",ADT,ASTATUS)) QUIT:ASTATUS=""  DO
  . . IF ASTATUS="C" QUIT  ;"COMPLETED already
  . . NEW IEN SET IEN=0
  . . FOR  SET IEN=$ORDER(^TMG(22750,"ATMGDTST",ADT,ASTATUS,IEN)) QUIT:IEN'>0  DO
  . . . NEW ZN SET ZN=$GET(^TMG(22750,IEN,0))
  . . . NEW ADFN SET ADFN=$PIECE(ZN,"^",1)
  . . . NEW ADUZ SET ADUZ=$PIECE(ZN,"^",6)
  . . . NEW DESCR SET DESCR=$PIECE($GET(^TMG(22750,IEN,1)),"^",1)
  . . . SET OUT(IEN)=ADFN_"^"_ADT_"^"_ASTATUS_"^"_ADUZ_"^"_DESCR
  QUIT
  ;
MAKEALERTS(SDT,EDT) ;"Make alerts for due Task Events.    
  ;"Input:DT -- Optional.  This is 'as-of' date.  Default is NOW
  ;"Result: none
  ;"Output: Alerts may be generated.
  ;
  NEW ARR
  DO GETEDUE(.ARR,.SDT,.EDT)  ;"ARR Format:  ARR(IEN22750)='<DFN>^<ACTION FMDT>^<STATUS CODE>^<DUZ>^<SHORT DESCRIPTION>'
  NEW IEN SET IEN=0
  FOR  SET IEN=$ORDER(ARR(IEN)) QUIT:IEN'>0  DO
  . NEW INFO SET INFO=$GET(ARR(IEN)) QUIT:INFO=""  ;"FORMAT: '<DFN>^<ACTION FMDT>^<STATUS CODE>^<DUZ>^<SHORT DESCRIPTION>'
  . NEW ADFN SET ADFN=$PIECE(INFO,"^",1)
  . NEW PTNAME,LNAME,FNAME,NAME,PARA
  . SET NAME=$PIECE($GET(^DPT(ADFN,0)),"^",1)
  . SET LNAME=$EXTRACT($PIECE(NAME,",",1),1,7)  ;"TRIM LNAME IF > 7 CHARS
  . NEW MAXLEN SET MAXLEN=8-$LENGTH(LNAME)   ;" 7 CHARS FOR LNAME, 1 CHAR FOR ',', X CHARS FOR FNAME (UP TO 9 TOTAL)
  . SET FNAME=$EXTRACT($PIECE(NAME,",",2),1,MAXLEN)
  . SET PARA="("_$$GET1^DIQ(2,ADFN,.0905)_")"
  . SET PTNAME=LNAME_","_FNAME_" "_PARA
  . NEW ACTIONFMDT SET ACTIONFMDT=$PIECE(INFO,"^",2)
  . NEW EXTDT SET EXTDT=$$FMTE^XLFDT(ACTIONFMDT,2)  ;"MM/DD/YY@HH:MM:SS format.  NOTE: Time not shown if not in ACTIONFMDT
  . NEW STATUSCODE SET STATUSCODE=$PIECE(INFO,"^",3)
  . NEW STATUS SET STATUS=$SELECT(STATUSCODE="U":"HIGH",1:"low")
  . NEW ADUZ SET ADUZ=$PIECE(INFO,"^",4)
  . NEW DESCR SET DESCR=$PIECE(INFO,"^",5)
  . NEW DATA SET DATA=ADFN_","_IEN
  . NEW MSG SET MSG="Task/Event due as of "_EXTDT_", ["_DESCR_"]"
  . ;"CALL API TO GENERATE ALERT 
  . NEW TEMP SET TEMP=$$MKCPRSALERT("TASKEVENT",ADUZ,DATA,PTNAME,MSG,IEN)  ;"This will not generate duplicate alert.  
  . IF TEMP<0 WRITE !,$PIECE(TEMP,"^",2),!
  . ;
  . ;"MAKE AN ALERT   -- REMOVE LATER, changed to $MKCPRSALERT
  . ;"IF $$CHK4DUP(ADUZ,ADFN,IEN)=1 QUIT
  . ;"NEW XQA,XQAARCH,XQADATA,XQAFLG,XQAGUID,XQAID,XQAOPT,XQAROU,XQASUPV,XQASURO,XQATEXT
  . ;"SET XQA(ADUZ)=""  
  . ;"SET (XQAID,XQADATA)="TMG,TASKEVENT,"_ADFN_","_IEN
  . ;"SET XQAROU="HNDLALERT^TMGEVENT"
  . ;"SET XQAMSG=PTNAME_": Task/Event due as of "_EXTDT_", ["_DESCR_"]"
  . ;"SET XQAFLG="R"
  . ;"NEW TEMP SET TEMP=$$SETUP1^XQALERT
  . ;"IF +TEMP'=1 WRITE "Error creating Alert: "_$GET(XQALERR),!  
  QUIT
  ;
MKCPRSALERT(TMGTYPE,ADUZ,DATA,PTNAME,MSG,EXTRADATA)  ;"MAKE AN ALERT 
  ;"Input: TMGTYPE -- this will be the string identifying the type of TMG alert to be process in CPRS
  ;"       ADUZ -- the targe recipient of alert
  ;"       PTNAME -- PATIENT NAME
  ;"       DATA -- data for input.  If contains more than one item should be comma delimited
  ;"       MSG -- the text to show for the alert.  
  ;"       EXTRADATA -- (OPTIONAL).  Extra, extended data for alert.  
  ;"Results : 1^OK, or -1^Error Message
  ;
  ;"NOTE:  Alert, as loaded by RPC 'ORWORB FASTUSER' should look like this  
  ;"'^<PT NAME>^^<STATUS>^<EXT DT>^<DESCR>^^<DATA>^^'
  ;"---------------
  ;"     <PT NAME> should be e.g. 'BRA,PAT (B9898)'
  ;"     <STATUS> should be 'HIGH' if status code is 'U' (urgent), otherwise 'low'
  ;"     <EXT DT> should be external (human-readable) date-time of due date (action date), e.g. '11/16/2022@10:31'
  ;"     <DESCR> should be the SHORT DESCRIPTION, e.g. 'Task/Event due now.'
  ;"     <DATA> should be in format: 'TMG,TASKEVENT,<DFN>,<IEN 22750>'  -- 'TMG' and 'TASKEVENT' are constant string names
  ;  
  NEW TMGRESULT SET TMGRESULT="1^OK"
  IF $$CHK4TMGCPRSDUP(TMGTYPE,ADUZ,DATA)=1 GOTO MKCADN 
  NEW XQA,XQAARCH,XQADATA,XQAFLG,XQAGUID,XQAID,XQAOPT,XQAROU,XQASUPV,XQASURO,XQATEXT
  SET XQA(ADUZ)=""  
  SET XQAID="TMG,"_TMGTYPE_","_DATA
  SET XQADATA=$GET(EXTRADATA)  ;"In CPRS code, Notifications.AlertData will contain this EXTRADATA.  
  SET XQAROU="HNDLALERT^TMGEVENT"
  SET XQAMSG=PTNAME_": "_MSG
  SET XQAFLG="R"
  NEW TEMP SET TEMP=$$SETUP1^XQALERT 
  IF +TEMP'=1 SET TMGRESULT="-1^Error creating Alert: ["_$GET(XQALERR)_"]"
MKCADN ;  
  QUIT TMGRESULT
  ;
CHK4TMGCPRSDUP(TMGTYPE,ADUZ,DATA)  ;
  ;"Input: TMGTYPE -- Type of TMG alert to be process in CPRS
  ;"       ADUZ -- The targe recipient of alert
  ;"       DATA -- Must match DATA used for creating TMG CPRS alert.  
  ;"Check to see if this alert is a duplicate.
  NEW TMGDUP SET TMGDUP=0
  NEW TMGXQAID SET TMGXQAID="TMG,"_TMGTYPE_","_DATA
  NEW ALRTDT SET ALRTDT=0
  FOR  SET ALRTDT=$ORDER(^XTV(8992,ADUZ,"XQA",ALRTDT)) QUIT:(ALRTDT="")!(TMGDUP=1)  DO
  . NEW ZN SET ZN=$GET(^XTV(8992,ADUZ,"XQA",ALRTDT,0))
  . NEW ONEID SET ONEID=$PIECE($PIECE(ZN,"^",2),";",1)
  . IF ONEID=TMGXQAID SET TMGDUP=1
  QUIT TMGDUP
  ;"  
HNDLALERT ;"This is alert handler. But since meant to be handled in CPRS, will not do anything here.
  QUIT
  ;
CHK4DUP(TMGDUZ,TMGDFN,MSGIEN) ;"REMOVE LATER...
  ;"Check to see if this alert is a duplicate.
  NEW TMGDUP SET TMGDUP=0
  NEW ALRTDT SET ALRTDT=0
  NEW TMGXQA SET TMGXQA="TMG,TASKEVENT,"_TMGDFN_","_MSGIEN
  FOR  SET ALRTDT=$O(^XTV(8992,TMGDUZ,"XQA",ALRTDT)) QUIT:ALRTDT=""  DO
  . NEW THISXQA SET THISXQA=$P($G(^XTV(8992,TMGDUZ,"XQA",ALRTDT,0)),"^",2)
  . SET THISXQA=$P(THISXQA,";",1)
  . IF THISXQA=TMGXQA SET TMGDUP=1
  QUIT TMGDUP
  ;"
CHKACTIV(TMGRESULT,EVENTINFO)   ;"CHECK TO SEE IF THE CURRENT JOB IS STILL ACTIVE
  SET TMGRESULT(0)="-1^JOB CLOSED"
  NEW IDX SET IDX=99999999
  NEW TMGDFN SET TMGDFN=+$P(EVENTINFO,"^",2)
  NEW USER SET USER=+$P(EVENTINFO,"^",1)
  NEW TODAY SET TODAY=$$TODAY^TMGDATE()
  NEW DONE SET DONE=0
  FOR  SET IDX=$O(^TMG(22747,"C",TMGDFN,IDX),-1) QUIT:(IDX'>0)!(DONE=1)  DO
  . NEW ZN SET ZN=$G(^TMG(22747,IDX,0))
  . NEW EVENT SET EVENT=$P(ZN,"^",3) 
  . NEW JOBNUM SET JOBNUM=+$P(ZN,"^",5)
  . IF JOBNUM'=$J QUIT   ;"ONLY INCLUDE CURRENT JOB NUMBER
  . NEW THISUSER SET THISUSER=$P(ZN,"^",1)
  . NEW THISDATE SET THISDATE=$P(ZN,"^",4)
  . NEW THISDAY SET THISDAY=$P(THISDATE,".",1)
  . IF (EVENT=1)&(THISUSER=USER)&(THISDAY=TODAY) DO
  . . SET DONE=1
  . . SET TMGRESULT(0)="1^LAST EVENT DOESN'T HAVE CORRESPONDING CLOSE. TURNED ON AT: "_$$EXTDATE^TMGDATE(THISDATE)_"^"_JOBNUM
  . ELSE  IF (EVENT=2)&(THISUSER=USER) DO
  . . SET DONE=1
  QUIT
  ;"