TMGRPC1H ;TMG/kst-RPC Functions ;5/1/13, 2/2/14, 3/24/21
         ;;1.0;TMG-LIB;**1**;5/1/13
 ;
 ;"TMG RPC FUNCTIONS especially related to CPRS
 ;"  Process Note (note sent from CPRS for extra processing, then returned)
 ;
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;"Copyright (c) 6/23/2015  Kevin S. Toppenberg MD
 ;"
 ;"This file is part of the TMG LIBRARY, and may only be used in accordence
 ;" to license terms outlined in separate file TMGLICNS.m, which should 
 ;" always be distributed with this file.
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;
 ;"=======================================================================
 ;" RPC -- Public Functions.
 ;"=======================================================================
 ;"PROCESS(TMGRESULT,TMGIN) -- Entrypoint for RPC to effect processing a note from CPRS
 ;"
 ;"=======================================================================
 ;"Dependancies:
 ;" TMGHTM1, TMGTIUOJ, TMGTIUO6, XLFSTR, TMGSTUT2, TMGSTUT3
 ;"=======================================================================
 ;
PROCESS(TMGRESULT,TMGIN,FORCE) ;"Entry point for RPC: TMG CPRS PROCESS NOTE
  ;"Input:  TMGRESULT -- output value
  ;"        TMGIN -- Input from client.  Format:
  ;"          TMGIN("DFN")=<DFN>  (IEN in PATIENT file)
  ;"          TMGIN("NoteIEN")=<TIUIEN>
  ;"          TMGIN("TEXT",1) = 1st line of text
  ;"          TMGIN("TEXT",2) = 2nd line of text, etc
  ;"        FORCE -- Optional. If 1,  note is processed even if tag is absent. Default is 0.
  ;"            UPDATE NOTE: we are forcing this to 1 below, regardless of RPC input
  NEW TMGZZDEBUG SET TMGZZDEBUG=0
  IF TMGZZDEBUG DO
  . KILL TMGIN,FORCE
  . MERGE TMGIN=^TMG("TMP","PROCESS^TMGRPC1H","TMGIN")
  . MERGE FORCE=^TMG("TMP","PROCESS^TMGRPC1H","FORCE")
  ELSE  DO
  . KILL ^TMG("TMP","PROCESS^TMGRPC1H")
  . MERGE ^TMG("TMP","PROCESS^TMGRPC1H","TMGIN")=TMGIN
  . MERGE ^TMG("TMP","PROCESS^TMGRPC1H","FORCE")=FORCE
  NEW OPTION 
  SET OPTION("ALL NOTES")=1
  SET FORCE=1 ;"ELH  Always process note  //kt moved from PROCESS^TMGTIUP3 to here 5/20/18  
  SET OPTION("FORCE PROCESS")=$GET(FORCE)  
  NEW USENEWMETHOD SET USENEWMETHOD=1
  IF USENEWMETHOD DO
  . DO SAVAMED^TMGTIUP3(.TMGIN)  ;"Move MEDICATION table to FINAL MEDICATION table
  . SET OPTION("FORCE REFRESH TABLE","FINAL MEDICATIONS")=1
  ELSE  DO
  . DO MOVEMEDS^TMGTIUP3(.TMGIN)  ;"Move MEDICATION table to FINAL MEDICATION table
  SET OPTION("DIRECT HTML INSERTION")=1  ;"//kt 5/23/18
  DO PROCESS^TMGTIUP3(.TMGRESULT,.TMGIN,.OPTION) ;
  QUIT
  ;
MOVEMEDS(TMGIN)  ;"Used as part of the RPC: TMG CPRS PROCESS NOTE  -- depreciated (see above)
  ;"Purpose: This function replaces the FINAL MEDICATION table with the
  ;"         MEDICATION table found within the note.
  ;"Input:   TMGIN -- Input from client.  Format:
  ;"              TMGIN("DFN")=<DFN>  (IEN in PATIENT file)
  ;"              TMGIN("NoteIEN")=<TIUIEN>
  ;"              TMGIN("TEXT",1) = 1st line of text
  ;"              TMGIN("TEXT",2) = 2nd line of text, etc
  ;"Output: TMGIN will contain the text as sent, with changes
  ;"Result: none
  NEW IDX,TEMPNOTE,TEMPIDX,MEDARR,MEDIDX,FOUNDMED,ENDFOUND,PARTB
  SET (IDX,TEMPIDX,MEDIDX,FOUNDMED)=0
  NEW FOUNDFINAL SET FOUNDFINAL=0
  FOR  SET IDX=$ORDER(TMGIN("TEXT",IDX)) QUIT:IDX'>0  DO
  . NEW LINE SET LINE=$G(TMGIN("TEXT",IDX))
  . IF FOUNDMED=1 DO
  . . IF (LINE["<P>")!(LINE["<p>") SET FOUNDMED=0
  . . ELSE  DO
  . . . SET MEDIDX=MEDIDX+1
  . . . SET MEDARR(MEDIDX)=LINE
  . IF LINE["[MEDICATION" SET FOUNDMED=1
  . ;"
  . ELSE  DO
  . . IF (LINE["<P>")!(LINE["<p>") SET FOUNDFINAL=0
  . IF FOUNDFINAL'=1 DO 
  . . SET TEMPIDX=TEMPIDX+1
  . . SET TEMPNOTE(TEMPIDX)=LINE
  . IF LINE["[FINAL MED" DO
  . . SET FOUNDFINAL=1
  . . SET MEDIDX=0
  . . FOR  SET MEDIDX=$ORDER(MEDARR(MEDIDX)) QUIT:MEDIDX'>0  DO
  . . . SET TEMPIDX=TEMPIDX+1
  . . . SET TEMPNOTE(TEMPIDX)=$G(MEDARR(MEDIDX))
  KILL TMGIN("TEXT")
  MERGE TMGIN("TEXT")=TEMPNOTE
  NEW TMGDFN SET TMGDFN=$G(TMGIN("DFN"))
  ;"NOW THAT MEDS ARE MOVED... STORE THE MEDARR INTO GLOBAL, SO THAT
  ;"      REFRESH TABLES WILL USE IT.
  NEW STORENAME SET STORENAME="MEDICATIONS TABLE-"_TMGDFN
  NEW REF SET REF=$$GETMPREF^TMGMISC2(STORENAME)
  NEW PRIORTIME SET PRIORTIME=+$GET(@REF@("D","HTIME"))
  NEW DELTASEC SET DELTASEC=$$HDIFF^XLFDT($H,PRIORTIME,2)  ;"returns seconds
  NEW ARR,H SET H=$H MERGE ARR("HTIME")=H
  ;"ARRANGE MEDARR INTO PROPER FORMAT
  NEW TMPMEDARR,IDX,TMPIDX
  SET IDX=0,TMPIDX=1       
  FOR  SET IDX=$O(MEDARR(IDX)) QUIT:IDX'>0  DO
  . IF $E($G(MEDARR(IDX)))="*" DO
  . . NEW P1,P2,VALUE
  . . SET VALUE=$G(MEDARR(IDX))
  . . SET P1=$P(VALUE," = ",1),P2=$P(VALUE," = ",2)
  . . SET TMPMEDARR("KEY-VALUE",P1)=P2
  . . SET TMPMEDARR("KEY-VALUE",P1,"LINE")=VALUE
  . ELSE  DO
  . . SET TMPMEDARR(TMPIDX)=$G(MEDARR(IDX))
  . . SET TMPIDX=TMPIDX+1
  SET TMPMEDARR("KEY-VALUE","SOURCE-DATE")=$$NOW^XLFDT()
  MERGE ARR("TABLE")=TMPMEDARR
  DO TMPSAVE^TMGMISC2(.ARR,STORENAME,"5M")
  QUIT
  ;
NOTETOC(TMGRESULT,TMGIN)  ;"ENTRY POINT FOR RPC: TMG CPRS GET NOTE TOC
  NEW TMGZZDEBUG SET TMGZZDEBUG=0
  IF TMGZZDEBUG DO
  . KILL TMGIN,FORCE
  . MERGE TMGIN=^TMG("TMP","NOTETOC^TMGRPC1H","TMGIN")
  ELSE  DO
  . KILL ^TMG("TMP","NOTETOC^TMGRPC1H")
  . MERGE ^TMG("TMP","NOTETOC^TMGRPC1H","TMGIN")=TMGIN
  ;"DO TOCTEST(.TMGRESULT)
  K TMGRESULT,TMGOUT
  SET TMGRESULT(0)="1^SUCCESS"
  NEW OUTIDX SET OUTIDX=1
  DO TOCHEAD(.TMGRESULT,.OUTIDX)
  DO TOCPARSE(.TMGRESULT,.OUTIDX,.TMGIN)
  DO TOCFOOT(.TMGRESULT,.OUTIDX)
  QUIT
  ;"
ADDCSS()  
  QUIT
  ;"
TOCPARSE(TMGOUT,OUTIDX,TMGIN)
  ;OLD CODE AT BOTTOM OF ROUTINE IF I MESSED SOMETHING UP
  NEW TMGHPI SET TMGHPI=""    
  ;"CONVERT ENTIRE NOTE INTO LONG STRING (TMGHPI)
  SET IDX=0 FOR  SET IDX=$ORDER(TMGIN("TEXT",IDX)) QUIT:IDX'>0  DO
  . SET TMGHPI=TMGHPI_$GET(TMGIN("TEXT",IDX))
  IF TMGHPI="" SET TMGRESULT="-1^No text for not found for processing." GOTO TOCPDN         
  NEW SECTIONARR,TOPICTAG
  SET SECTIONARR("HISTORY OF PRESENT ILLNESS (HPI):")=""
  SET SECTIONARR("PAST MEDICAL HISTORY (PMH)")=""
  SET SECTIONARR("PHYSICAL EXAM (PE)")=""
  SET SECTIONARR("REVIEW OF SYSTEMS")=""
  SET SECTIONARR("ASSESSMENT &amp; PLAN")=""
  SET SECTIONARR("FOLLOW UP APPT:")=""
  NEW STARTDIV,ENDDIV SET (STARTDIV,ENDDIV)=""
  NEW DIVS,DIVS2 ;"//kt 6/3/25 added DIVS,DIVS2 vars
  MERGE DIVS=SECTIONARR
  SET DIVS("-- [")=""
  MERGE DIVS2=DIVS
  SET DIVS2("*")=""
  SET DIVS2("<LI>")=""
  SET DIVS2("<li>")=""  
  ;"
  ;"//kt 5/30/25  SET TMGHPI=$$UPTAGS^TMGHTM2(TMGHPI)  ;"force all tags to UPPER CASE
  SET TMGHPI=$$LOTAGS^TMGHTM2(TMGHPI)  ;"force all tags to LOWER CASE   //5/30/25   
  ;"Remove/replace unwanted tags / strings from note  
  DO RPTAGS^TMGHTM1(.TMGHPI,"<BR />","<BR>")
  DO RPTAGS^TMGHTM1(.TMGHPI,"<P />","<P>")
  DO RPTAGS^TMGHTM1(.TMGHPI,"<br />","<br>")  ;"5/30/25
  DO RPTAGS^TMGHTM1(.TMGHPI,"<p />","<p>")    ;"5/30/25
  DO RMTAGS^TMGHTM1(.TMGHPI,"=== HPI ISSUES BELOW WERE NOT ADDRESSED TODAY ===")
  DO RPTAGS^TMGHTM1(.TMGHPI,"<LI>  <P>","<LI> ")
  DO RPTAGS^TMGHTM1(.TMGHPI,"<li>  <p>","<li> ")  ;"5/30/25
  DO RPTAGS^TMGHTM1(.TMGHPI,"[group ","[GROUP ")  ;"force group tags to be ucase 11/13/18
  DO RPTAGS^TMGHTM1(.TMGHPI,"[Group ","[GROUP ")
  DO RMTAGS^TMGHTM1(.TMGHPI,"<I>")  
  DO RMTAGS^TMGHTM1(.TMGHPI,"<EM>") 
  DO RMTAGS^TMGHTM1(.TMGHPI,"</I>") 
  DO RMTAGS^TMGHTM1(.TMGHPI,"</EM>")         
  DO RMTAGS^TMGHTM1(.TMGHPI,"<i>")  
  DO RMTAGS^TMGHTM1(.TMGHPI,"<em>") 
  DO RMTAGS^TMGHTM1(.TMGHPI,"</i>") 
  DO RMTAGS^TMGHTM1(.TMGHPI,"</em>")         
  ;"                           
  ;"Parse Items
  NEW TABLES,SECTION SET IDX=1 
  NEW OUTSIDEHPI SET OUTSIDEHPI=1
  NEW INSIDESECTION SET INSIDESECTION=0
  NEW INSIDETOPIC SET INSIDETOPIC=0
  NEW TOPICOL SET TOPICOL=0
  NEW DELIMITER,TABLEARR,TOCARR
  NEW CURSECTION SET CURSECTION=""
  NEW HPIARR,HPIIDX SET HPIIDX=1
  NEW HPIALPHA SET HPIALPHA=1   ;"CHANGE THIS (PER USER OR SETTING) IF YOU DON'T WANT ALPHABETICAL
  FOR  QUIT:TMGHPI=""  DO
  . ;"ADD FOLLOWUP AT BOTTOM TO THE LIST
  . IF OUTSIDEHPI DO
  . . SET DELIMITER=$$NEXTFRAG^TMGSTUT3(TMGHPI,0,.DIVS)   
  . ELSE  DO
  . . SET DELIMITER=$$NEXTFRAG^TMGSTUT3(TMGHPI,0,.DIVS2)  
  . NEW TOPIC
  . IF DELIMITER="-- [" DO
  . . SET TOPIC=$P(TMGHPI,DELIMITER,2)
  . . SET TOPIC=$P(TOPIC,"] --",1)
  . . SET TMGHPI=$P(TMGHPI,"] --",2,999)
  . . IF $D(TOCARR("ZTABLES",TOPIC)) SET TOPIC=TOPIC_" (DUPLICATE)"  ;"8/12/25
  . . SET TOCARR("ZTABLES",TOPIC)=""
  . ELSE  IF $DATA(SECTIONARR(DELIMITER)) DO
  . . IF DELIMITER["HPI" DO
  . . . SET OUTSIDEHPI=0
  . . ELSE  DO
  . . . SET OUTSIDEHPI=1
  . . IF DELIMITER["HPI" DO
  . . . SET CURSECTION="A"_DELIMITER
  . . ELSE  DO
  . . . SET CURSECTION=DELIMITER
  . . SET TOCARR(CURSECTION)=""
  . . SET TMGHPI=$P(TMGHPI,DELIMITER,2,999)
  . . SET INSIDETOPIC=0
  . ELSE  DO
  . . SET TMGHPI=$PIECE(TMGHPI,DELIMITER,2,999)
  . . NEW NEXTDEL
  . . IF OUTSIDEHPI DO
  . . . ;"SET NEXTDEL=$$NEXTCH^TMGSTUT3(TMGHPI,0,"-- [","HISTORY OF PRESENT ILLNESS (HPI):","PAST MEDICAL HISTORY (PMH)","PHYSICAL EXAM (PE)","REVIEW OF SYSTEMS","ASSESSMENT &amp; PLAN","FOLLOW UP APPT:")
  . . . SET NEXTDEL=$$NEXTFRAG^TMGSTUT3(TMGHPI,0,.DIVS)
  . . ELSE  DO
  . . . ;"SET NEXTDEL=$$NEXTCH^TMGSTUT3(TMGHPI,0,"*","<LI>","-- [","HISTORY OF PRESENT ILLNESS (HPI):","PAST MEDICAL HISTORY (PMH)","PHYSICAL EXAM (PE)","REVIEW OF SYSTEMS","ASSESSMENT &amp; PLAN","FOLLOW UP APPT:")
  . . . SET NEXTDEL=$$NEXTFRAG^TMGSTUT3(TMGHPI,0,.DIVS2)  
  . . NEW SECTION SET SECTION=$PIECE(TMGHPI,NEXTDEL,1)
  . . NEW TITLE,TEXTARR DO SPLITTL^TMGTIUP2(SECTION,.TITLE,.TEXTARR,.TABLES,.OPTION) ;"Parse to a title of section, and parts
  . . DO RMTAGS^TMGHTM1(.TITLE,$C(13,10,13,10)) 
  . . DO RMTAGS^TMGHTM1(.TITLE,$C(13,10))  
  . . NEW TRIMTITLE SET TRIMTITLE=$$TRIM^XLFSTR(TITLE)
  . . SET INSIDETOPIC=1,TOPICOL=0
  . . IF CURSECTION="" SET CURSECTION="NO SECTION FOUND"
  . . IF TRIMTITLE'="" DO
  . . . IF $D(TOCARR(CURSECTION,TITLE)) SET TITLE=TITLE_" (DUPLICATE)"  ;"6/18/24
  . . . SET TOCARR(CURSECTION,TITLE)=""
  . . . IF CURSECTION["HPI" SET HPIARR(HPIIDX)=TITLE,HPIIDX=HPIIDX+1
  ;
  NEW SECTION,TITLE SET SECTION=""
  FOR  SET SECTION=$ORDER(TOCARR(SECTION)) QUIT:SECTION=""  DO
  . IF SECTION="ZTABLES" DO
  . . SET TMGOUT(OUTIDX)="<ul>",OUTIDX=OUTIDX+1
  . . SET TMGOUT(OUTIDX)="<li>TABLES</li>",OUTIDX=OUTIDX+1
  . ELSE  IF SECTION["HPI" DO
  . . SET TMGOUT(OUTIDX)="<ul>",OUTIDX=OUTIDX+1
  . . SET TMGOUT(OUTIDX)="<li><a href=""HISTORY OF PRESENT ILLNESS (HPI):"">HISTORY OF PRESENT ILLNESS (HPI):</a></li>",OUTIDX=OUTIDX+1
  . ELSE  DO
  . . SET TMGOUT(OUTIDX)="<ul>",OUTIDX=OUTIDX+1
  . . SET TMGOUT(OUTIDX)="<li><a href="""_SECTION_""">"_SECTION_"</a></li>",OUTIDX=OUTIDX+1
  . SET TITLE=""
  . NEW SUBITEMS SET SUBITEMS=0
  . IF (SECTION["HPI")&(HPIALPHA=0) DO   ;"DO THIS BY ORDER IN NOTE, DEFAULT IS ALPHABETICAL
  . . SET HPIIDX=0
  . . FOR  SET HPIIDX=$O(HPIARR(HPIIDX)) QUIT:HPIIDX'>0  DO
  . . . IF SUBITEMS=0 DO
  . . . . SET TMGOUT(OUTIDX)="<ul>",OUTIDX=OUTIDX+1
  . . . . SET SUBITEMS=1
  . . . NEW HPITITLE SET HPITITLE=$G(HPIARR(HPIIDX))
  . . . SET TMGOUT(OUTIDX)="<li><a href="""_HPITITLE_":"">"_HPITITLE_"</a></li>",OUTIDX=OUTIDX+1
  . ELSE  DO
  . . FOR  SET TITLE=$O(TOCARR(SECTION,TITLE)) QUIT:TITLE=""  DO
  . . . IF SUBITEMS=0 DO
  . . . . SET TMGOUT(OUTIDX)="<ul>",OUTIDX=OUTIDX+1
  . . . . SET SUBITEMS=1
  . . . IF SECTION="ZTABLES" DO
  . . . . SET TMGOUT(OUTIDX)="<li><a href=""["_$P(TITLE," (DUPLICATE",1)_"]"">"_TITLE_" table</a></li>",OUTIDX=OUTIDX+1
  . . . ELSE  DO
  . . . . SET TMGOUT(OUTIDX)="<li><a href="""_TITLE_":"">"_TITLE_"</a></li>",OUTIDX=OUTIDX+1
  . IF SUBITEMS=1 SET TMGOUT(OUTIDX)="</ul>",OUTIDX=OUTIDX+1
  . SET TMGOUT(OUTIDX)="</ul>",OUTIDX=OUTIDX+1
  ;
TOCPDN ;  
  QUIT
  ;
INSRTHPI(TMGOUT,OUTIDX,HPIARR)
  NEW TITLE SET TITLE=""
  FOR  SET TITLE=$ORDER(HPIARR(TITLE)) QUIT:TITLE=""  DO
  . SET TMGOUT(OUTIDX)="<li><a href="""_TITLE_":"">"_TITLE_"</a></li>",OUTIDX=OUTIDX+1
  QUIT
  ;
TOCHEAD(TMGOUT,OUTIDX)
  DO GETCODE^TMGHTM3("TMGOUT","TOCHTMHEAD","TMGRPC1H",.OUTIDX)
  SET OUTIDX=OUTIDX+1
  QUIT
  ;
TOCHTMHEAD ;"HTML for use by TOCHEAD
  ;;<!DOCTYPE html>
  ;;<html lang="en">
  ;;<head>
  ;;  <meta charset="UTF-8">
  ;;  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  ;;  <title>Static HTML Treeview with Ordered Lists</title>
  ;;  
  ;;  <style>
  ;;    ul {
  ;;      background: #ffffe6;
  ;;      color: green;
  ;;      padding: 10px;
  ;;      margin: 1px;
  ;;      margin-top: 0px;
  ;;      margin-left: 5px;
  ;;      margin-right: 0px;
  ;;      border: none;
  ;;    }
  ;;    
  ;;    ul li {
  ;;      background: #ffffe6;
  ;;      color: darkred;
  ;;      margin: 1px;
  ;;      margin-right: 0px;
  ;;      margin-top: 0px;
  ;;      margin-bottom: 0px;
  ;;    }
  ;;  </style>
  ;;</head>
  ;;<body style="font-family:'Georgia';">
  ;;
  ;;<h2>NOTE CONTENTS</h2>
  ;;<ul id="myUL">
  ;;
  ;;DONE_WITH_HTML
  ;
TOCFOOT(TMGOUT,OUTIDX)
  DO GETCODE^TMGHTM3("TMGOUT","TOCHTMFOOT","TMGRPC1H",.OUTIDX)
  SET OUTIDX=OUTIDX+1
  QUIT
  ;  
TOCHTMFOOT(TMGOUT,OUTIDX,TMGIN)  ;"HTML for use by TOCFOOT
  ;;</body>
  ;;</html>
  ;;
  ;;DONE_WITH_HTML
  ;
    